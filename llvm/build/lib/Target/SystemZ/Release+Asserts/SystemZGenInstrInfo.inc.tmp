/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Enum Values                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace SystemZ {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    PATCHPOINT	= 18,
    LOAD_STACK_GUARD	= 19,
    A	= 20,
    ADB	= 21,
    ADBR	= 22,
    ADJCALLSTACKDOWN	= 23,
    ADJCALLSTACKUP	= 24,
    ADJDYNALLOC	= 25,
    AEB	= 26,
    AEBR	= 27,
    AEXT128_64	= 28,
    AFI	= 29,
    AFIMux	= 30,
    AG	= 31,
    AGF	= 32,
    AGFI	= 33,
    AGFR	= 34,
    AGHI	= 35,
    AGHIK	= 36,
    AGR	= 37,
    AGRK	= 38,
    AGSI	= 39,
    AH	= 40,
    AHI	= 41,
    AHIK	= 42,
    AHIMux	= 43,
    AHIMuxK	= 44,
    AHY	= 45,
    AIH	= 46,
    AL	= 47,
    ALC	= 48,
    ALCG	= 49,
    ALCGR	= 50,
    ALCR	= 51,
    ALFI	= 52,
    ALG	= 53,
    ALGF	= 54,
    ALGFI	= 55,
    ALGFR	= 56,
    ALGHSIK	= 57,
    ALGR	= 58,
    ALGRK	= 59,
    ALHSIK	= 60,
    ALR	= 61,
    ALRK	= 62,
    ALY	= 63,
    AR	= 64,
    ARK	= 65,
    ASI	= 66,
    ATOMIC_CMP_SWAPW	= 67,
    ATOMIC_LOADW_AFI	= 68,
    ATOMIC_LOADW_AR	= 69,
    ATOMIC_LOADW_MAX	= 70,
    ATOMIC_LOADW_MIN	= 71,
    ATOMIC_LOADW_NILH	= 72,
    ATOMIC_LOADW_NILHi	= 73,
    ATOMIC_LOADW_NR	= 74,
    ATOMIC_LOADW_NRi	= 75,
    ATOMIC_LOADW_OILH	= 76,
    ATOMIC_LOADW_OR	= 77,
    ATOMIC_LOADW_SR	= 78,
    ATOMIC_LOADW_UMAX	= 79,
    ATOMIC_LOADW_UMIN	= 80,
    ATOMIC_LOADW_XILF	= 81,
    ATOMIC_LOADW_XR	= 82,
    ATOMIC_LOAD_AFI	= 83,
    ATOMIC_LOAD_AGFI	= 84,
    ATOMIC_LOAD_AGHI	= 85,
    ATOMIC_LOAD_AGR	= 86,
    ATOMIC_LOAD_AHI	= 87,
    ATOMIC_LOAD_AR	= 88,
    ATOMIC_LOAD_MAX_32	= 89,
    ATOMIC_LOAD_MAX_64	= 90,
    ATOMIC_LOAD_MIN_32	= 91,
    ATOMIC_LOAD_MIN_64	= 92,
    ATOMIC_LOAD_NGR	= 93,
    ATOMIC_LOAD_NGRi	= 94,
    ATOMIC_LOAD_NIHF64	= 95,
    ATOMIC_LOAD_NIHF64i	= 96,
    ATOMIC_LOAD_NIHH64	= 97,
    ATOMIC_LOAD_NIHH64i	= 98,
    ATOMIC_LOAD_NIHL64	= 99,
    ATOMIC_LOAD_NIHL64i	= 100,
    ATOMIC_LOAD_NILF	= 101,
    ATOMIC_LOAD_NILF64	= 102,
    ATOMIC_LOAD_NILF64i	= 103,
    ATOMIC_LOAD_NILFi	= 104,
    ATOMIC_LOAD_NILH	= 105,
    ATOMIC_LOAD_NILH64	= 106,
    ATOMIC_LOAD_NILH64i	= 107,
    ATOMIC_LOAD_NILHi	= 108,
    ATOMIC_LOAD_NILL	= 109,
    ATOMIC_LOAD_NILL64	= 110,
    ATOMIC_LOAD_NILL64i	= 111,
    ATOMIC_LOAD_NILLi	= 112,
    ATOMIC_LOAD_NR	= 113,
    ATOMIC_LOAD_NRi	= 114,
    ATOMIC_LOAD_OGR	= 115,
    ATOMIC_LOAD_OIHF64	= 116,
    ATOMIC_LOAD_OIHH64	= 117,
    ATOMIC_LOAD_OIHL64	= 118,
    ATOMIC_LOAD_OILF	= 119,
    ATOMIC_LOAD_OILF64	= 120,
    ATOMIC_LOAD_OILH	= 121,
    ATOMIC_LOAD_OILH64	= 122,
    ATOMIC_LOAD_OILL	= 123,
    ATOMIC_LOAD_OILL64	= 124,
    ATOMIC_LOAD_OR	= 125,
    ATOMIC_LOAD_SGR	= 126,
    ATOMIC_LOAD_SR	= 127,
    ATOMIC_LOAD_UMAX_32	= 128,
    ATOMIC_LOAD_UMAX_64	= 129,
    ATOMIC_LOAD_UMIN_32	= 130,
    ATOMIC_LOAD_UMIN_64	= 131,
    ATOMIC_LOAD_XGR	= 132,
    ATOMIC_LOAD_XIHF64	= 133,
    ATOMIC_LOAD_XILF	= 134,
    ATOMIC_LOAD_XILF64	= 135,
    ATOMIC_LOAD_XR	= 136,
    ATOMIC_SWAPW	= 137,
    ATOMIC_SWAP_32	= 138,
    ATOMIC_SWAP_64	= 139,
    AXBR	= 140,
    AY	= 141,
    AsmBCR	= 142,
    AsmBRC	= 143,
    AsmBRCL	= 144,
    AsmCGIJ	= 145,
    AsmCGRJ	= 146,
    AsmCIJ	= 147,
    AsmCLGIJ	= 148,
    AsmCLGRJ	= 149,
    AsmCLIJ	= 150,
    AsmCLRJ	= 151,
    AsmCRJ	= 152,
    AsmEBR	= 153,
    AsmEJ	= 154,
    AsmEJG	= 155,
    AsmELOC	= 156,
    AsmELOCG	= 157,
    AsmELOCGR	= 158,
    AsmELOCR	= 159,
    AsmESTOC	= 160,
    AsmESTOCG	= 161,
    AsmHBR	= 162,
    AsmHEBR	= 163,
    AsmHEJ	= 164,
    AsmHEJG	= 165,
    AsmHELOC	= 166,
    AsmHELOCG	= 167,
    AsmHELOCGR	= 168,
    AsmHELOCR	= 169,
    AsmHESTOC	= 170,
    AsmHESTOCG	= 171,
    AsmHJ	= 172,
    AsmHJG	= 173,
    AsmHLOC	= 174,
    AsmHLOCG	= 175,
    AsmHLOCGR	= 176,
    AsmHLOCR	= 177,
    AsmHSTOC	= 178,
    AsmHSTOCG	= 179,
    AsmJEAltCGI	= 180,
    AsmJEAltCGR	= 181,
    AsmJEAltCI	= 182,
    AsmJEAltCLGI	= 183,
    AsmJEAltCLGR	= 184,
    AsmJEAltCLI	= 185,
    AsmJEAltCLR	= 186,
    AsmJEAltCR	= 187,
    AsmJECGI	= 188,
    AsmJECGR	= 189,
    AsmJECI	= 190,
    AsmJECLGI	= 191,
    AsmJECLGR	= 192,
    AsmJECLI	= 193,
    AsmJECLR	= 194,
    AsmJECR	= 195,
    AsmJHAltCGI	= 196,
    AsmJHAltCGR	= 197,
    AsmJHAltCI	= 198,
    AsmJHAltCLGI	= 199,
    AsmJHAltCLGR	= 200,
    AsmJHAltCLI	= 201,
    AsmJHAltCLR	= 202,
    AsmJHAltCR	= 203,
    AsmJHCGI	= 204,
    AsmJHCGR	= 205,
    AsmJHCI	= 206,
    AsmJHCLGI	= 207,
    AsmJHCLGR	= 208,
    AsmJHCLI	= 209,
    AsmJHCLR	= 210,
    AsmJHCR	= 211,
    AsmJHEAltCGI	= 212,
    AsmJHEAltCGR	= 213,
    AsmJHEAltCI	= 214,
    AsmJHEAltCLGI	= 215,
    AsmJHEAltCLGR	= 216,
    AsmJHEAltCLI	= 217,
    AsmJHEAltCLR	= 218,
    AsmJHEAltCR	= 219,
    AsmJHECGI	= 220,
    AsmJHECGR	= 221,
    AsmJHECI	= 222,
    AsmJHECLGI	= 223,
    AsmJHECLGR	= 224,
    AsmJHECLI	= 225,
    AsmJHECLR	= 226,
    AsmJHECR	= 227,
    AsmJLAltCGI	= 228,
    AsmJLAltCGR	= 229,
    AsmJLAltCI	= 230,
    AsmJLAltCLGI	= 231,
    AsmJLAltCLGR	= 232,
    AsmJLAltCLI	= 233,
    AsmJLAltCLR	= 234,
    AsmJLAltCR	= 235,
    AsmJLCGI	= 236,
    AsmJLCGR	= 237,
    AsmJLCI	= 238,
    AsmJLCLGI	= 239,
    AsmJLCLGR	= 240,
    AsmJLCLI	= 241,
    AsmJLCLR	= 242,
    AsmJLCR	= 243,
    AsmJLEAltCGI	= 244,
    AsmJLEAltCGR	= 245,
    AsmJLEAltCI	= 246,
    AsmJLEAltCLGI	= 247,
    AsmJLEAltCLGR	= 248,
    AsmJLEAltCLI	= 249,
    AsmJLEAltCLR	= 250,
    AsmJLEAltCR	= 251,
    AsmJLECGI	= 252,
    AsmJLECGR	= 253,
    AsmJLECI	= 254,
    AsmJLECLGI	= 255,
    AsmJLECLGR	= 256,
    AsmJLECLI	= 257,
    AsmJLECLR	= 258,
    AsmJLECR	= 259,
    AsmJLHAltCGI	= 260,
    AsmJLHAltCGR	= 261,
    AsmJLHAltCI	= 262,
    AsmJLHAltCLGI	= 263,
    AsmJLHAltCLGR	= 264,
    AsmJLHAltCLI	= 265,
    AsmJLHAltCLR	= 266,
    AsmJLHAltCR	= 267,
    AsmJLHCGI	= 268,
    AsmJLHCGR	= 269,
    AsmJLHCI	= 270,
    AsmJLHCLGI	= 271,
    AsmJLHCLGR	= 272,
    AsmJLHCLI	= 273,
    AsmJLHCLR	= 274,
    AsmJLHCR	= 275,
    AsmLBR	= 276,
    AsmLEBR	= 277,
    AsmLEJ	= 278,
    AsmLEJG	= 279,
    AsmLELOC	= 280,
    AsmLELOCG	= 281,
    AsmLELOCGR	= 282,
    AsmLELOCR	= 283,
    AsmLESTOC	= 284,
    AsmLESTOCG	= 285,
    AsmLHBR	= 286,
    AsmLHJ	= 287,
    AsmLHJG	= 288,
    AsmLHLOC	= 289,
    AsmLHLOCG	= 290,
    AsmLHLOCGR	= 291,
    AsmLHLOCR	= 292,
    AsmLHSTOC	= 293,
    AsmLHSTOCG	= 294,
    AsmLJ	= 295,
    AsmLJG	= 296,
    AsmLLOC	= 297,
    AsmLLOCG	= 298,
    AsmLLOCGR	= 299,
    AsmLLOCR	= 300,
    AsmLOC	= 301,
    AsmLOCG	= 302,
    AsmLOCGR	= 303,
    AsmLOCR	= 304,
    AsmLSTOC	= 305,
    AsmLSTOCG	= 306,
    AsmNEBR	= 307,
    AsmNEJ	= 308,
    AsmNEJG	= 309,
    AsmNELOC	= 310,
    AsmNELOCG	= 311,
    AsmNELOCGR	= 312,
    AsmNELOCR	= 313,
    AsmNESTOC	= 314,
    AsmNESTOCG	= 315,
    AsmNHBR	= 316,
    AsmNHEBR	= 317,
    AsmNHEJ	= 318,
    AsmNHEJG	= 319,
    AsmNHELOC	= 320,
    AsmNHELOCG	= 321,
    AsmNHELOCGR	= 322,
    AsmNHELOCR	= 323,
    AsmNHESTOC	= 324,
    AsmNHESTOCG	= 325,
    AsmNHJ	= 326,
    AsmNHJG	= 327,
    AsmNHLOC	= 328,
    AsmNHLOCG	= 329,
    AsmNHLOCGR	= 330,
    AsmNHLOCR	= 331,
    AsmNHSTOC	= 332,
    AsmNHSTOCG	= 333,
    AsmNLBR	= 334,
    AsmNLEBR	= 335,
    AsmNLEJ	= 336,
    AsmNLEJG	= 337,
    AsmNLELOC	= 338,
    AsmNLELOCG	= 339,
    AsmNLELOCGR	= 340,
    AsmNLELOCR	= 341,
    AsmNLESTOC	= 342,
    AsmNLESTOCG	= 343,
    AsmNLHBR	= 344,
    AsmNLHJ	= 345,
    AsmNLHJG	= 346,
    AsmNLHLOC	= 347,
    AsmNLHLOCG	= 348,
    AsmNLHLOCGR	= 349,
    AsmNLHLOCR	= 350,
    AsmNLHSTOC	= 351,
    AsmNLHSTOCG	= 352,
    AsmNLJ	= 353,
    AsmNLJG	= 354,
    AsmNLLOC	= 355,
    AsmNLLOCG	= 356,
    AsmNLLOCGR	= 357,
    AsmNLLOCR	= 358,
    AsmNLSTOC	= 359,
    AsmNLSTOCG	= 360,
    AsmNOBR	= 361,
    AsmNOJ	= 362,
    AsmNOJG	= 363,
    AsmNOLOC	= 364,
    AsmNOLOCG	= 365,
    AsmNOLOCGR	= 366,
    AsmNOLOCR	= 367,
    AsmNOSTOC	= 368,
    AsmNOSTOCG	= 369,
    AsmOBR	= 370,
    AsmOJ	= 371,
    AsmOJG	= 372,
    AsmOLOC	= 373,
    AsmOLOCG	= 374,
    AsmOLOCGR	= 375,
    AsmOLOCR	= 376,
    AsmOSTOC	= 377,
    AsmOSTOCG	= 378,
    AsmSTOC	= 379,
    AsmSTOCG	= 380,
    BASR	= 381,
    BR	= 382,
    BRAS	= 383,
    BRASL	= 384,
    BRC	= 385,
    BRCL	= 386,
    BRCT	= 387,
    BRCTG	= 388,
    C	= 389,
    CDB	= 390,
    CDBR	= 391,
    CDFBR	= 392,
    CDGBR	= 393,
    CDLFBR	= 394,
    CDLGBR	= 395,
    CEB	= 396,
    CEBR	= 397,
    CEFBR	= 398,
    CEGBR	= 399,
    CELFBR	= 400,
    CELGBR	= 401,
    CFDBR	= 402,
    CFEBR	= 403,
    CFI	= 404,
    CFIMux	= 405,
    CFXBR	= 406,
    CG	= 407,
    CGDBR	= 408,
    CGEBR	= 409,
    CGF	= 410,
    CGFI	= 411,
    CGFR	= 412,
    CGFRL	= 413,
    CGH	= 414,
    CGHI	= 415,
    CGHRL	= 416,
    CGHSI	= 417,
    CGIJ	= 418,
    CGR	= 419,
    CGRJ	= 420,
    CGRL	= 421,
    CGXBR	= 422,
    CH	= 423,
    CHF	= 424,
    CHHSI	= 425,
    CHI	= 426,
    CHRL	= 427,
    CHSI	= 428,
    CHY	= 429,
    CIH	= 430,
    CIJ	= 431,
    CL	= 432,
    CLC	= 433,
    CLCLoop	= 434,
    CLCSequence	= 435,
    CLFDBR	= 436,
    CLFEBR	= 437,
    CLFHSI	= 438,
    CLFI	= 439,
    CLFIMux	= 440,
    CLFXBR	= 441,
    CLG	= 442,
    CLGDBR	= 443,
    CLGEBR	= 444,
    CLGF	= 445,
    CLGFI	= 446,
    CLGFR	= 447,
    CLGFRL	= 448,
    CLGHRL	= 449,
    CLGHSI	= 450,
    CLGIJ	= 451,
    CLGR	= 452,
    CLGRJ	= 453,
    CLGRL	= 454,
    CLGXBR	= 455,
    CLHF	= 456,
    CLHHSI	= 457,
    CLHRL	= 458,
    CLI	= 459,
    CLIH	= 460,
    CLIJ	= 461,
    CLIY	= 462,
    CLMux	= 463,
    CLR	= 464,
    CLRJ	= 465,
    CLRL	= 466,
    CLST	= 467,
    CLSTLoop	= 468,
    CLY	= 469,
    CMux	= 470,
    CPSDRdd	= 471,
    CPSDRds	= 472,
    CPSDRsd	= 473,
    CPSDRss	= 474,
    CR	= 475,
    CRJ	= 476,
    CRL	= 477,
    CS	= 478,
    CSG	= 479,
    CSY	= 480,
    CXBR	= 481,
    CXFBR	= 482,
    CXGBR	= 483,
    CXLFBR	= 484,
    CXLGBR	= 485,
    CY	= 486,
    CallBASR	= 487,
    CallBR	= 488,
    CallBRASL	= 489,
    CallJG	= 490,
    CondStore16	= 491,
    CondStore16Inv	= 492,
    CondStore16Mux	= 493,
    CondStore16MuxInv	= 494,
    CondStore32	= 495,
    CondStore32Inv	= 496,
    CondStore64	= 497,
    CondStore64Inv	= 498,
    CondStore8	= 499,
    CondStore8Inv	= 500,
    CondStore8Mux	= 501,
    CondStore8MuxInv	= 502,
    CondStoreF32	= 503,
    CondStoreF32Inv	= 504,
    CondStoreF64	= 505,
    CondStoreF64Inv	= 506,
    DDB	= 507,
    DDBR	= 508,
    DEB	= 509,
    DEBR	= 510,
    DL	= 511,
    DLG	= 512,
    DLGR	= 513,
    DLR	= 514,
    DSG	= 515,
    DSGF	= 516,
    DSGFR	= 517,
    DSGR	= 518,
    DXBR	= 519,
    EAR	= 520,
    FIDBR	= 521,
    FIDBRA	= 522,
    FIEBR	= 523,
    FIEBRA	= 524,
    FIXBR	= 525,
    FIXBRA	= 526,
    FLOGR	= 527,
    IC	= 528,
    IC32	= 529,
    IC32Y	= 530,
    ICY	= 531,
    IIFMux	= 532,
    IIHF	= 533,
    IIHF64	= 534,
    IIHH	= 535,
    IIHH64	= 536,
    IIHL	= 537,
    IIHL64	= 538,
    IIHMux	= 539,
    IILF	= 540,
    IILF64	= 541,
    IILH	= 542,
    IILH64	= 543,
    IILL	= 544,
    IILL64	= 545,
    IILMux	= 546,
    IPM	= 547,
    J	= 548,
    JG	= 549,
    L	= 550,
    L128	= 551,
    LA	= 552,
    LAA	= 553,
    LAAG	= 554,
    LAAL	= 555,
    LAALG	= 556,
    LAN	= 557,
    LANG	= 558,
    LAO	= 559,
    LAOG	= 560,
    LARL	= 561,
    LAX	= 562,
    LAXG	= 563,
    LAY	= 564,
    LB	= 565,
    LBH	= 566,
    LBMux	= 567,
    LBR	= 568,
    LCDBR	= 569,
    LCEBR	= 570,
    LCGFR	= 571,
    LCGR	= 572,
    LCR	= 573,
    LCXBR	= 574,
    LD	= 575,
    LDEB	= 576,
    LDEBR	= 577,
    LDGR	= 578,
    LDR	= 579,
    LDXBR	= 580,
    LDXBRA	= 581,
    LDY	= 582,
    LE	= 583,
    LEDBR	= 584,
    LEDBRA	= 585,
    LER	= 586,
    LEXBR	= 587,
    LEXBRA	= 588,
    LEY	= 589,
    LFH	= 590,
    LG	= 591,
    LGB	= 592,
    LGBR	= 593,
    LGDR	= 594,
    LGF	= 595,
    LGFI	= 596,
    LGFR	= 597,
    LGFRL	= 598,
    LGH	= 599,
    LGHI	= 600,
    LGHR	= 601,
    LGHRL	= 602,
    LGR	= 603,
    LGRL	= 604,
    LH	= 605,
    LHH	= 606,
    LHI	= 607,
    LHIMux	= 608,
    LHMux	= 609,
    LHR	= 610,
    LHRL	= 611,
    LHY	= 612,
    LLC	= 613,
    LLCH	= 614,
    LLCMux	= 615,
    LLCR	= 616,
    LLCRMux	= 617,
    LLGC	= 618,
    LLGCR	= 619,
    LLGF	= 620,
    LLGFR	= 621,
    LLGFRL	= 622,
    LLGH	= 623,
    LLGHR	= 624,
    LLGHRL	= 625,
    LLH	= 626,
    LLHH	= 627,
    LLHMux	= 628,
    LLHR	= 629,
    LLHRL	= 630,
    LLHRMux	= 631,
    LLIHF	= 632,
    LLIHH	= 633,
    LLIHL	= 634,
    LLILF	= 635,
    LLILH	= 636,
    LLILL	= 637,
    LMG	= 638,
    LMux	= 639,
    LNDBR	= 640,
    LNEBR	= 641,
    LNGFR	= 642,
    LNGR	= 643,
    LNR	= 644,
    LNXBR	= 645,
    LOC	= 646,
    LOCG	= 647,
    LOCGR	= 648,
    LOCR	= 649,
    LPDBR	= 650,
    LPEBR	= 651,
    LPGFR	= 652,
    LPGR	= 653,
    LPR	= 654,
    LPXBR	= 655,
    LR	= 656,
    LRL	= 657,
    LRMux	= 658,
    LRV	= 659,
    LRVG	= 660,
    LRVGR	= 661,
    LRVR	= 662,
    LT	= 663,
    LTDBR	= 664,
    LTDBRCompare	= 665,
    LTEBR	= 666,
    LTEBRCompare	= 667,
    LTG	= 668,
    LTGF	= 669,
    LTGFR	= 670,
    LTGR	= 671,
    LTR	= 672,
    LTXBR	= 673,
    LTXBRCompare	= 674,
    LX	= 675,
    LXDB	= 676,
    LXDBR	= 677,
    LXEB	= 678,
    LXEBR	= 679,
    LXR	= 680,
    LY	= 681,
    LZDR	= 682,
    LZER	= 683,
    LZXR	= 684,
    MADB	= 685,
    MADBR	= 686,
    MAEB	= 687,
    MAEBR	= 688,
    MDB	= 689,
    MDBR	= 690,
    MDEB	= 691,
    MDEBR	= 692,
    MEEB	= 693,
    MEEBR	= 694,
    MGHI	= 695,
    MH	= 696,
    MHI	= 697,
    MHY	= 698,
    MLG	= 699,
    MLGR	= 700,
    MS	= 701,
    MSDB	= 702,
    MSDBR	= 703,
    MSEB	= 704,
    MSEBR	= 705,
    MSFI	= 706,
    MSG	= 707,
    MSGF	= 708,
    MSGFI	= 709,
    MSGFR	= 710,
    MSGR	= 711,
    MSR	= 712,
    MSY	= 713,
    MVC	= 714,
    MVCLoop	= 715,
    MVCSequence	= 716,
    MVGHI	= 717,
    MVHHI	= 718,
    MVHI	= 719,
    MVI	= 720,
    MVIY	= 721,
    MVST	= 722,
    MVSTLoop	= 723,
    MXBR	= 724,
    MXDB	= 725,
    MXDBR	= 726,
    N	= 727,
    NC	= 728,
    NCLoop	= 729,
    NCSequence	= 730,
    NG	= 731,
    NGR	= 732,
    NGRK	= 733,
    NI	= 734,
    NIFMux	= 735,
    NIHF	= 736,
    NIHF64	= 737,
    NIHH	= 738,
    NIHH64	= 739,
    NIHL	= 740,
    NIHL64	= 741,
    NIHMux	= 742,
    NILF	= 743,
    NILF64	= 744,
    NILH	= 745,
    NILH64	= 746,
    NILL	= 747,
    NILL64	= 748,
    NILMux	= 749,
    NIY	= 750,
    NR	= 751,
    NRK	= 752,
    NY	= 753,
    O	= 754,
    OC	= 755,
    OCLoop	= 756,
    OCSequence	= 757,
    OG	= 758,
    OGR	= 759,
    OGRK	= 760,
    OI	= 761,
    OIFMux	= 762,
    OIHF	= 763,
    OIHF64	= 764,
    OIHH	= 765,
    OIHH64	= 766,
    OIHL	= 767,
    OIHL64	= 768,
    OIHMux	= 769,
    OILF	= 770,
    OILF64	= 771,
    OILH	= 772,
    OILH64	= 773,
    OILL	= 774,
    OILL64	= 775,
    OILMux	= 776,
    OIY	= 777,
    OR	= 778,
    ORK	= 779,
    OY	= 780,
    PFD	= 781,
    PFDRL	= 782,
    RISBG	= 783,
    RISBG32	= 784,
    RISBHG	= 785,
    RISBHH	= 786,
    RISBHL	= 787,
    RISBLG	= 788,
    RISBLH	= 789,
    RISBLL	= 790,
    RISBMux	= 791,
    RLL	= 792,
    RLLG	= 793,
    RNSBG	= 794,
    ROSBG	= 795,
    RXSBG	= 796,
    Return	= 797,
    S	= 798,
    SDB	= 799,
    SDBR	= 800,
    SEB	= 801,
    SEBR	= 802,
    SG	= 803,
    SGF	= 804,
    SGFR	= 805,
    SGR	= 806,
    SGRK	= 807,
    SH	= 808,
    SHY	= 809,
    SL	= 810,
    SLB	= 811,
    SLBG	= 812,
    SLBR	= 813,
    SLFI	= 814,
    SLG	= 815,
    SLGBR	= 816,
    SLGF	= 817,
    SLGFI	= 818,
    SLGFR	= 819,
    SLGR	= 820,
    SLGRK	= 821,
    SLL	= 822,
    SLLG	= 823,
    SLLK	= 824,
    SLR	= 825,
    SLRK	= 826,
    SLY	= 827,
    SQDB	= 828,
    SQDBR	= 829,
    SQEB	= 830,
    SQEBR	= 831,
    SQXBR	= 832,
    SR	= 833,
    SRA	= 834,
    SRAG	= 835,
    SRAK	= 836,
    SRK	= 837,
    SRL	= 838,
    SRLG	= 839,
    SRLK	= 840,
    SRST	= 841,
    SRSTLoop	= 842,
    ST	= 843,
    ST128	= 844,
    STC	= 845,
    STCH	= 846,
    STCMux	= 847,
    STCY	= 848,
    STD	= 849,
    STDY	= 850,
    STE	= 851,
    STEY	= 852,
    STFH	= 853,
    STG	= 854,
    STGRL	= 855,
    STH	= 856,
    STHH	= 857,
    STHMux	= 858,
    STHRL	= 859,
    STHY	= 860,
    STMG	= 861,
    STMux	= 862,
    STOC	= 863,
    STOCG	= 864,
    STRL	= 865,
    STRV	= 866,
    STRVG	= 867,
    STX	= 868,
    STY	= 869,
    SXBR	= 870,
    SY	= 871,
    Select32	= 872,
    Select32Mux	= 873,
    Select64	= 874,
    SelectF128	= 875,
    SelectF32	= 876,
    SelectF64	= 877,
    Serialize	= 878,
    TM	= 879,
    TMHH	= 880,
    TMHH64	= 881,
    TMHL	= 882,
    TMHL64	= 883,
    TMHMux	= 884,
    TMLH	= 885,
    TMLH64	= 886,
    TMLL	= 887,
    TMLL64	= 888,
    TMLMux	= 889,
    TMY	= 890,
    X	= 891,
    XC	= 892,
    XCLoop	= 893,
    XCSequence	= 894,
    XG	= 895,
    XGR	= 896,
    XGRK	= 897,
    XI	= 898,
    XIFMux	= 899,
    XIHF	= 900,
    XIHF64	= 901,
    XILF	= 902,
    XILF64	= 903,
    XIY	= 904,
    XR	= 905,
    XRK	= 906,
    XY	= 907,
    ZEXT128_32	= 908,
    ZEXT128_64	= 909,
    INSTRUCTION_LIST_END = 910
  };
namespace Sched {
  enum {
    NoInstrModel	= 0,
    SCHED_LIST_END = 1
  };
}
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Descriptors                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { SystemZ::CC, 0 };
static const uint16_t ImplicitList2[] = { SystemZ::R0L, 0 };
static const uint16_t ImplicitList3[] = { SystemZ::R14D, SystemZ::CC, 0 };
static const uint16_t ImplicitList4[] = { SystemZ::R1D, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo96[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GRH32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GRX32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };

extern const MCInstrDesc SystemZInsts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr,0,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr,0,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2,0,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2,0,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2,0,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr,0,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3,0,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4,0,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6,0,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo3,0,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr,0,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7,0,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr,0,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo2,0,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo2,0,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8,0,nullptr },  // Inst #17 = STACKMAP
  { 18,	6,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9,0,nullptr },  // Inst #18 = PATCHPOINT
  { 19,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10,0,nullptr },  // Inst #19 = LOAD_STACK_GUARD
  { 20,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x23c88ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #20 = A
  { 21,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x3fd08ULL, nullptr, ImplicitList1, OperandInfo12,0,nullptr },  // Inst #21 = ADB
  { 22,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo13,0,nullptr },  // Inst #22 = ADBR
  { 23,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2,0,nullptr },  // Inst #23 = ADJCALLSTACKDOWN
  { 24,	2,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8,0,nullptr },  // Inst #24 = ADJCALLSTACKUP
  { 25,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #25 = ADJDYNALLOC
  { 26,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x3fc88ULL, nullptr, ImplicitList1, OperandInfo15,0,nullptr },  // Inst #26 = AEB
  { 27,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo16,0,nullptr },  // Inst #27 = AEBR
  { 28,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17,0,nullptr },  // Inst #28 = AEXT128_64
  { 29,	3,	1,	0,	6,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #29 = AFI
  { 30,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #30 = AFIMux
  { 31,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x23d0cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #31 = AG
  { 32,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x23c8cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #32 = AGF
  { 33,	3,	1,	0,	6,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #33 = AGFI
  { 34,	3,	1,	0,	4,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo22,0,nullptr },  // Inst #34 = AGFR
  { 35,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #35 = AGHI
  { 36,	3,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo23,0,nullptr },  // Inst #36 = AGHIK
  { 37,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #37 = AGR
  { 38,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo25,0,nullptr },  // Inst #38 = AGRK
  { 39,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x23c04ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #39 = AGSI
  { 40,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x23c48ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #40 = AH
  { 41,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #41 = AHI
  { 42,	3,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo27,0,nullptr },  // Inst #42 = AHIK
  { 43,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #43 = AHIMux
  { 44,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo28,0,nullptr },  // Inst #44 = AHIMuxK
  { 45,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x23c4cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #45 = AHY
  { 46,	3,	1,	0,	6,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo29,0,nullptr },  // Inst #46 = AIH
  { 47,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #47 = AL
  { 48,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, ImplicitList1, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #48 = ALC
  { 49,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, ImplicitList1, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #49 = ALCG
  { 50,	3,	1,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #50 = ALCGR
  { 51,	3,	1,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #51 = ALCR
  { 52,	3,	1,	0,	6,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #52 = ALFI
  { 53,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #53 = ALG
  { 54,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #54 = ALGF
  { 55,	3,	1,	0,	6,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #55 = ALGFI
  { 56,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo22,0,nullptr },  // Inst #56 = ALGFR
  { 57,	3,	1,	0,	6,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo23,0,nullptr },  // Inst #57 = ALGHSIK
  { 58,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, nullptr, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #58 = ALGR
  { 59,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo25,0,nullptr },  // Inst #59 = ALGRK
  { 60,	3,	1,	0,	6,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo27,0,nullptr },  // Inst #60 = ALHSIK
  { 61,	3,	1,	0,	2,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, nullptr, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #61 = ALR
  { 62,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31,0,nullptr },  // Inst #62 = ALRK
  { 63,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #63 = ALY
  { 64,	3,	1,	0,	2,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #64 = AR
  { 65,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo31,0,nullptr },  // Inst #65 = ARK
  { 66,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x23c04ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #66 = ASI
  { 67,	8,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo32,0,nullptr },  // Inst #67 = ATOMIC_CMP_SWAPW
  { 68,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo33,0,nullptr },  // Inst #68 = ATOMIC_LOADW_AFI
  { 69,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #69 = ATOMIC_LOADW_AR
  { 70,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #70 = ATOMIC_LOADW_MAX
  { 71,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #71 = ATOMIC_LOADW_MIN
  { 72,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo33,0,nullptr },  // Inst #72 = ATOMIC_LOADW_NILH
  { 73,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo33,0,nullptr },  // Inst #73 = ATOMIC_LOADW_NILHi
  { 74,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #74 = ATOMIC_LOADW_NR
  { 75,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #75 = ATOMIC_LOADW_NRi
  { 76,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo33,0,nullptr },  // Inst #76 = ATOMIC_LOADW_OILH
  { 77,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #77 = ATOMIC_LOADW_OR
  { 78,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #78 = ATOMIC_LOADW_SR
  { 79,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #79 = ATOMIC_LOADW_UMAX
  { 80,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #80 = ATOMIC_LOADW_UMIN
  { 81,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo33,0,nullptr },  // Inst #81 = ATOMIC_LOADW_XILF
  { 82,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #82 = ATOMIC_LOADW_XR
  { 83,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #83 = ATOMIC_LOAD_AFI
  { 84,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #84 = ATOMIC_LOAD_AGFI
  { 85,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #85 = ATOMIC_LOAD_AGHI
  { 86,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #86 = ATOMIC_LOAD_AGR
  { 87,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #87 = ATOMIC_LOAD_AHI
  { 88,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #88 = ATOMIC_LOAD_AR
  { 89,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #89 = ATOMIC_LOAD_MAX_32
  { 90,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #90 = ATOMIC_LOAD_MAX_64
  { 91,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #91 = ATOMIC_LOAD_MIN_32
  { 92,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #92 = ATOMIC_LOAD_MIN_64
  { 93,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #93 = ATOMIC_LOAD_NGR
  { 94,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #94 = ATOMIC_LOAD_NGRi
  { 95,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #95 = ATOMIC_LOAD_NIHF64
  { 96,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #96 = ATOMIC_LOAD_NIHF64i
  { 97,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #97 = ATOMIC_LOAD_NIHH64
  { 98,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #98 = ATOMIC_LOAD_NIHH64i
  { 99,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #99 = ATOMIC_LOAD_NIHL64
  { 100,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #100 = ATOMIC_LOAD_NIHL64i
  { 101,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #101 = ATOMIC_LOAD_NILF
  { 102,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #102 = ATOMIC_LOAD_NILF64
  { 103,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #103 = ATOMIC_LOAD_NILF64i
  { 104,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #104 = ATOMIC_LOAD_NILFi
  { 105,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #105 = ATOMIC_LOAD_NILH
  { 106,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #106 = ATOMIC_LOAD_NILH64
  { 107,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #107 = ATOMIC_LOAD_NILH64i
  { 108,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #108 = ATOMIC_LOAD_NILHi
  { 109,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #109 = ATOMIC_LOAD_NILL
  { 110,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #110 = ATOMIC_LOAD_NILL64
  { 111,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #111 = ATOMIC_LOAD_NILL64i
  { 112,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #112 = ATOMIC_LOAD_NILLi
  { 113,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #113 = ATOMIC_LOAD_NR
  { 114,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #114 = ATOMIC_LOAD_NRi
  { 115,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #115 = ATOMIC_LOAD_OGR
  { 116,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #116 = ATOMIC_LOAD_OIHF64
  { 117,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #117 = ATOMIC_LOAD_OIHH64
  { 118,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #118 = ATOMIC_LOAD_OIHL64
  { 119,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #119 = ATOMIC_LOAD_OILF
  { 120,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #120 = ATOMIC_LOAD_OILF64
  { 121,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #121 = ATOMIC_LOAD_OILH
  { 122,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #122 = ATOMIC_LOAD_OILH64
  { 123,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #123 = ATOMIC_LOAD_OILL
  { 124,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #124 = ATOMIC_LOAD_OILL64
  { 125,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #125 = ATOMIC_LOAD_OR
  { 126,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #126 = ATOMIC_LOAD_SGR
  { 127,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #127 = ATOMIC_LOAD_SR
  { 128,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #128 = ATOMIC_LOAD_UMAX_32
  { 129,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #129 = ATOMIC_LOAD_UMAX_64
  { 130,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #130 = ATOMIC_LOAD_UMIN_32
  { 131,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #131 = ATOMIC_LOAD_UMIN_64
  { 132,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #132 = ATOMIC_LOAD_XGR
  { 133,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #133 = ATOMIC_LOAD_XIHF64
  { 134,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo35,0,nullptr },  // Inst #134 = ATOMIC_LOAD_XILF
  { 135,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo36,0,nullptr },  // Inst #135 = ATOMIC_LOAD_XILF64
  { 136,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #136 = ATOMIC_LOAD_XR
  { 137,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo34,0,nullptr },  // Inst #137 = ATOMIC_SWAPW
  { 138,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo38,0,nullptr },  // Inst #138 = ATOMIC_SWAP_32
  { 139,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, nullptr, ImplicitList1, OperandInfo37,0,nullptr },  // Inst #139 = ATOMIC_SWAP_64
  { 140,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo39,0,nullptr },  // Inst #140 = AXBR
  { 141,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x23c8cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #141 = AY
  { 142,	2,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo40,0,nullptr },  // Inst #142 = AsmBCR
  { 143,	2,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7,0,nullptr },  // Inst #143 = AsmBRC
  { 144,	2,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7,0,nullptr },  // Inst #144 = AsmBRCL
  { 145,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo41,0,nullptr },  // Inst #145 = AsmCGIJ
  { 146,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo42,0,nullptr },  // Inst #146 = AsmCGRJ
  { 147,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo43,0,nullptr },  // Inst #147 = AsmCIJ
  { 148,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo41,0,nullptr },  // Inst #148 = AsmCLGIJ
  { 149,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo42,0,nullptr },  // Inst #149 = AsmCLGRJ
  { 150,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo43,0,nullptr },  // Inst #150 = AsmCLIJ
  { 151,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo44,0,nullptr },  // Inst #151 = AsmCLRJ
  { 152,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo44,0,nullptr },  // Inst #152 = AsmCRJ
  { 153,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #153 = AsmEBR
  { 154,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #154 = AsmEJ
  { 155,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #155 = AsmEJG
  { 156,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #156 = AsmELOC
  { 157,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #157 = AsmELOCG
  { 158,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #158 = AsmELOCGR
  { 159,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #159 = AsmELOCR
  { 160,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #160 = AsmESTOC
  { 161,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #161 = AsmESTOCG
  { 162,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #162 = AsmHBR
  { 163,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #163 = AsmHEBR
  { 164,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #164 = AsmHEJ
  { 165,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #165 = AsmHEJG
  { 166,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #166 = AsmHELOC
  { 167,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #167 = AsmHELOCG
  { 168,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #168 = AsmHELOCGR
  { 169,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #169 = AsmHELOCR
  { 170,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #170 = AsmHESTOC
  { 171,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #171 = AsmHESTOCG
  { 172,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #172 = AsmHJ
  { 173,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #173 = AsmHJG
  { 174,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #174 = AsmHLOC
  { 175,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #175 = AsmHLOCG
  { 176,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #176 = AsmHLOCGR
  { 177,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #177 = AsmHLOCR
  { 178,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #178 = AsmHSTOC
  { 179,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #179 = AsmHSTOCG
  { 180,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #180 = AsmJEAltCGI
  { 181,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #181 = AsmJEAltCGR
  { 182,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #182 = AsmJEAltCI
  { 183,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #183 = AsmJEAltCLGI
  { 184,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #184 = AsmJEAltCLGR
  { 185,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #185 = AsmJEAltCLI
  { 186,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #186 = AsmJEAltCLR
  { 187,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #187 = AsmJEAltCR
  { 188,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #188 = AsmJECGI
  { 189,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #189 = AsmJECGR
  { 190,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #190 = AsmJECI
  { 191,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #191 = AsmJECLGI
  { 192,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #192 = AsmJECLGR
  { 193,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #193 = AsmJECLI
  { 194,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #194 = AsmJECLR
  { 195,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #195 = AsmJECR
  { 196,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #196 = AsmJHAltCGI
  { 197,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #197 = AsmJHAltCGR
  { 198,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #198 = AsmJHAltCI
  { 199,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #199 = AsmJHAltCLGI
  { 200,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #200 = AsmJHAltCLGR
  { 201,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #201 = AsmJHAltCLI
  { 202,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #202 = AsmJHAltCLR
  { 203,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #203 = AsmJHAltCR
  { 204,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #204 = AsmJHCGI
  { 205,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #205 = AsmJHCGR
  { 206,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #206 = AsmJHCI
  { 207,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #207 = AsmJHCLGI
  { 208,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #208 = AsmJHCLGR
  { 209,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #209 = AsmJHCLI
  { 210,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #210 = AsmJHCLR
  { 211,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #211 = AsmJHCR
  { 212,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #212 = AsmJHEAltCGI
  { 213,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #213 = AsmJHEAltCGR
  { 214,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #214 = AsmJHEAltCI
  { 215,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #215 = AsmJHEAltCLGI
  { 216,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #216 = AsmJHEAltCLGR
  { 217,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #217 = AsmJHEAltCLI
  { 218,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #218 = AsmJHEAltCLR
  { 219,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #219 = AsmJHEAltCR
  { 220,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #220 = AsmJHECGI
  { 221,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #221 = AsmJHECGR
  { 222,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #222 = AsmJHECI
  { 223,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #223 = AsmJHECLGI
  { 224,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #224 = AsmJHECLGR
  { 225,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #225 = AsmJHECLI
  { 226,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #226 = AsmJHECLR
  { 227,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #227 = AsmJHECR
  { 228,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #228 = AsmJLAltCGI
  { 229,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #229 = AsmJLAltCGR
  { 230,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #230 = AsmJLAltCI
  { 231,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #231 = AsmJLAltCLGI
  { 232,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #232 = AsmJLAltCLGR
  { 233,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #233 = AsmJLAltCLI
  { 234,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #234 = AsmJLAltCLR
  { 235,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #235 = AsmJLAltCR
  { 236,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #236 = AsmJLCGI
  { 237,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #237 = AsmJLCGR
  { 238,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #238 = AsmJLCI
  { 239,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #239 = AsmJLCLGI
  { 240,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #240 = AsmJLCLGR
  { 241,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #241 = AsmJLCLI
  { 242,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #242 = AsmJLCLR
  { 243,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #243 = AsmJLCR
  { 244,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #244 = AsmJLEAltCGI
  { 245,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #245 = AsmJLEAltCGR
  { 246,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #246 = AsmJLEAltCI
  { 247,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #247 = AsmJLEAltCLGI
  { 248,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #248 = AsmJLEAltCLGR
  { 249,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #249 = AsmJLEAltCLI
  { 250,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #250 = AsmJLEAltCLR
  { 251,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #251 = AsmJLEAltCR
  { 252,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #252 = AsmJLECGI
  { 253,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #253 = AsmJLECGR
  { 254,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #254 = AsmJLECI
  { 255,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #255 = AsmJLECLGI
  { 256,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #256 = AsmJLECLGR
  { 257,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #257 = AsmJLECLI
  { 258,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #258 = AsmJLECLR
  { 259,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #259 = AsmJLECR
  { 260,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #260 = AsmJLHAltCGI
  { 261,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #261 = AsmJLHAltCGR
  { 262,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #262 = AsmJLHAltCI
  { 263,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #263 = AsmJLHAltCLGI
  { 264,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #264 = AsmJLHAltCLGR
  { 265,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #265 = AsmJLHAltCLI
  { 266,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #266 = AsmJLHAltCLR
  { 267,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #267 = AsmJLHAltCR
  { 268,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #268 = AsmJLHCGI
  { 269,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #269 = AsmJLHCGR
  { 270,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #270 = AsmJLHCI
  { 271,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50,0,nullptr },  // Inst #271 = AsmJLHCLGI
  { 272,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23,0,nullptr },  // Inst #272 = AsmJLHCLGR
  { 273,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51,0,nullptr },  // Inst #273 = AsmJLHCLI
  { 274,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #274 = AsmJLHCLR
  { 275,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27,0,nullptr },  // Inst #275 = AsmJLHCR
  { 276,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #276 = AsmLBR
  { 277,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #277 = AsmLEBR
  { 278,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #278 = AsmLEJ
  { 279,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #279 = AsmLEJG
  { 280,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #280 = AsmLELOC
  { 281,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #281 = AsmLELOCG
  { 282,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #282 = AsmLELOCGR
  { 283,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #283 = AsmLELOCR
  { 284,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #284 = AsmLESTOC
  { 285,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #285 = AsmLESTOCG
  { 286,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #286 = AsmLHBR
  { 287,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #287 = AsmLHJ
  { 288,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #288 = AsmLHJG
  { 289,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #289 = AsmLHLOC
  { 290,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #290 = AsmLHLOCG
  { 291,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #291 = AsmLHLOCGR
  { 292,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #292 = AsmLHLOCR
  { 293,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #293 = AsmLHSTOC
  { 294,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #294 = AsmLHSTOCG
  { 295,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #295 = AsmLJ
  { 296,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #296 = AsmLJG
  { 297,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #297 = AsmLLOC
  { 298,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #298 = AsmLLOCG
  { 299,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #299 = AsmLLOCGR
  { 300,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #300 = AsmLLOCR
  { 301,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, ImplicitList1, nullptr, OperandInfo52,0,nullptr },  // Inst #301 = AsmLOC
  { 302,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, ImplicitList1, nullptr, OperandInfo53,0,nullptr },  // Inst #302 = AsmLOCG
  { 303,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo54,0,nullptr },  // Inst #303 = AsmLOCGR
  { 304,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo55,0,nullptr },  // Inst #304 = AsmLOCR
  { 305,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #305 = AsmLSTOC
  { 306,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #306 = AsmLSTOCG
  { 307,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #307 = AsmNEBR
  { 308,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #308 = AsmNEJ
  { 309,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #309 = AsmNEJG
  { 310,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #310 = AsmNELOC
  { 311,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #311 = AsmNELOCG
  { 312,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #312 = AsmNELOCGR
  { 313,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #313 = AsmNELOCR
  { 314,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #314 = AsmNESTOC
  { 315,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #315 = AsmNESTOCG
  { 316,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #316 = AsmNHBR
  { 317,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #317 = AsmNHEBR
  { 318,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #318 = AsmNHEJ
  { 319,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #319 = AsmNHEJG
  { 320,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #320 = AsmNHELOC
  { 321,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #321 = AsmNHELOCG
  { 322,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #322 = AsmNHELOCGR
  { 323,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #323 = AsmNHELOCR
  { 324,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #324 = AsmNHESTOC
  { 325,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #325 = AsmNHESTOCG
  { 326,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #326 = AsmNHJ
  { 327,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #327 = AsmNHJG
  { 328,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #328 = AsmNHLOC
  { 329,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #329 = AsmNHLOCG
  { 330,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #330 = AsmNHLOCGR
  { 331,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #331 = AsmNHLOCR
  { 332,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #332 = AsmNHSTOC
  { 333,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #333 = AsmNHSTOCG
  { 334,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #334 = AsmNLBR
  { 335,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #335 = AsmNLEBR
  { 336,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #336 = AsmNLEJ
  { 337,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #337 = AsmNLEJG
  { 338,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #338 = AsmNLELOC
  { 339,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #339 = AsmNLELOCG
  { 340,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #340 = AsmNLELOCGR
  { 341,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #341 = AsmNLELOCR
  { 342,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #342 = AsmNLESTOC
  { 343,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #343 = AsmNLESTOCG
  { 344,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #344 = AsmNLHBR
  { 345,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #345 = AsmNLHJ
  { 346,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #346 = AsmNLHJG
  { 347,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #347 = AsmNLHLOC
  { 348,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #348 = AsmNLHLOCG
  { 349,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #349 = AsmNLHLOCGR
  { 350,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #350 = AsmNLHLOCR
  { 351,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #351 = AsmNLHSTOC
  { 352,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #352 = AsmNLHSTOCG
  { 353,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #353 = AsmNLJ
  { 354,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #354 = AsmNLJG
  { 355,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #355 = AsmNLLOC
  { 356,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #356 = AsmNLLOCG
  { 357,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #357 = AsmNLLOCGR
  { 358,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #358 = AsmNLLOCR
  { 359,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #359 = AsmNLSTOC
  { 360,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #360 = AsmNLSTOCG
  { 361,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #361 = AsmNOBR
  { 362,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #362 = AsmNOJ
  { 363,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #363 = AsmNOJG
  { 364,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #364 = AsmNOLOC
  { 365,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #365 = AsmNOLOCG
  { 366,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #366 = AsmNOLOCGR
  { 367,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #367 = AsmNOLOCR
  { 368,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #368 = AsmNOSTOC
  { 369,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #369 = AsmNOSTOCG
  { 370,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #370 = AsmOBR
  { 371,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #371 = AsmOJ
  { 372,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #372 = AsmOJG
  { 373,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo46,0,nullptr },  // Inst #373 = AsmOLOC
  { 374,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo47,0,nullptr },  // Inst #374 = AsmOLOCG
  { 375,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #375 = AsmOLOCGR
  { 376,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #376 = AsmOLOCR
  { 377,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, nullptr, nullptr, OperandInfo48,0,nullptr },  // Inst #377 = AsmOSTOC
  { 378,	3,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, nullptr, nullptr, OperandInfo49,0,nullptr },  // Inst #378 = AsmOSTOCG
  { 379,	4,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x84ULL, ImplicitList1, nullptr, OperandInfo35,0,nullptr },  // Inst #379 = AsmSTOC
  { 380,	4,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x104ULL, ImplicitList1, nullptr, OperandInfo36,0,nullptr },  // Inst #380 = AsmSTOCG
  { 381,	2,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56,0,nullptr },  // Inst #381 = BASR
  { 382,	1,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo45,0,nullptr },  // Inst #382 = BR
  { 383,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #383 = BRAS
  { 384,	2,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #384 = BRASL
  { 385,	3,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x40000ULL, ImplicitList1, nullptr, OperandInfo58,0,nullptr },  // Inst #385 = BRC
  { 386,	3,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x40000ULL, ImplicitList1, nullptr, OperandInfo58,0,nullptr },  // Inst #386 = BRCL
  { 387,	3,	1,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #387 = BRCT
  { 388,	3,	1,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #388 = BRCTG
  { 389,	4,	0,	0,	4,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3888ULL, nullptr, ImplicitList1, OperandInfo59,0,nullptr },  // Inst #389 = C
  { 390,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3d08ULL, nullptr, ImplicitList1, OperandInfo60,0,nullptr },  // Inst #390 = CDB
  { 391,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3c00ULL, nullptr, ImplicitList1, OperandInfo61,0,nullptr },  // Inst #391 = CDBR
  { 392,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo62,0,nullptr },  // Inst #392 = CDFBR
  { 393,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo63,0,nullptr },  // Inst #393 = CDGBR
  { 394,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo64,0,nullptr },  // Inst #394 = CDLFBR
  { 395,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo65,0,nullptr },  // Inst #395 = CDLGBR
  { 396,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3c88ULL, nullptr, ImplicitList1, OperandInfo66,0,nullptr },  // Inst #396 = CEB
  { 397,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3c00ULL, nullptr, ImplicitList1, OperandInfo67,0,nullptr },  // Inst #397 = CEBR
  { 398,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo68,0,nullptr },  // Inst #398 = CEFBR
  { 399,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo69,0,nullptr },  // Inst #399 = CEGBR
  { 400,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo70,0,nullptr },  // Inst #400 = CELFBR
  { 401,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo71,0,nullptr },  // Inst #401 = CELGBR
  { 402,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo72,0,nullptr },  // Inst #402 = CFDBR
  { 403,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo73,0,nullptr },  // Inst #403 = CFEBR
  { 404,	2,	0,	0,	6,	0|(1<<MCID::Compare), 0x3800ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #404 = CFI
  { 405,	2,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x3800ULL, nullptr, ImplicitList1, OperandInfo75,0,nullptr },  // Inst #405 = CFIMux
  { 406,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo76,0,nullptr },  // Inst #406 = CFXBR
  { 407,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x390cULL, nullptr, ImplicitList1, OperandInfo14,0,nullptr },  // Inst #407 = CG
  { 408,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo77,0,nullptr },  // Inst #408 = CGDBR
  { 409,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo78,0,nullptr },  // Inst #409 = CGEBR
  { 410,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x388cULL, nullptr, ImplicitList1, OperandInfo14,0,nullptr },  // Inst #410 = CGF
  { 411,	2,	0,	0,	6,	0|(1<<MCID::Compare), 0x3800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #411 = CGFI
  { 412,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3800ULL, nullptr, ImplicitList1, OperandInfo79,0,nullptr },  // Inst #412 = CGFR
  { 413,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #413 = CGFRL
  { 414,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x384cULL, nullptr, ImplicitList1, OperandInfo14,0,nullptr },  // Inst #414 = CGH
  { 415,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #415 = CGHI
  { 416,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #416 = CGHRL
  { 417,	3,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3800ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #417 = CGHSI
  { 418,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo41,0,nullptr },  // Inst #418 = CGIJ
  { 419,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3800ULL, nullptr, ImplicitList1, OperandInfo80,0,nullptr },  // Inst #419 = CGR
  { 420,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo42,0,nullptr },  // Inst #420 = CGRJ
  { 421,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #421 = CGRL
  { 422,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo81,0,nullptr },  // Inst #422 = CGXBR
  { 423,	4,	0,	0,	4,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3848ULL, nullptr, ImplicitList1, OperandInfo59,0,nullptr },  // Inst #423 = CH
  { 424,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x388cULL, nullptr, ImplicitList1, OperandInfo82,0,nullptr },  // Inst #424 = CHF
  { 425,	3,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3800ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #425 = CHHSI
  { 426,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3800ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #426 = CHI
  { 427,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3800ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #427 = CHRL
  { 428,	3,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3800ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #428 = CHSI
  { 429,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x384cULL, nullptr, ImplicitList1, OperandInfo59,0,nullptr },  // Inst #429 = CHY
  { 430,	2,	0,	0,	6,	0|(1<<MCID::Compare), 0x3800ULL, nullptr, ImplicitList1, OperandInfo83,0,nullptr },  // Inst #430 = CIH
  { 431,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo43,0,nullptr },  // Inst #431 = CIJ
  { 432,	4,	0,	0,	4,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103888ULL, nullptr, ImplicitList1, OperandInfo59,0,nullptr },  // Inst #432 = CL
  { 433,	5,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo84,0,nullptr },  // Inst #433 = CLC
  { 434,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo85,0,nullptr },  // Inst #434 = CLCLoop
  { 435,	5,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86,0,nullptr },  // Inst #435 = CLCSequence
  { 436,	4,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo87,0,nullptr },  // Inst #436 = CLFDBR
  { 437,	4,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo88,0,nullptr },  // Inst #437 = CLFEBR
  { 438,	3,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #438 = CLFHSI
  { 439,	2,	0,	0,	6,	0|(1<<MCID::Compare), 0x103800ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #439 = CLFI
  { 440,	2,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x103800ULL, nullptr, ImplicitList1, OperandInfo75,0,nullptr },  // Inst #440 = CLFIMux
  { 441,	4,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo89,0,nullptr },  // Inst #441 = CLFXBR
  { 442,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10390cULL, nullptr, ImplicitList1, OperandInfo14,0,nullptr },  // Inst #442 = CLG
  { 443,	4,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo90,0,nullptr },  // Inst #443 = CLGDBR
  { 444,	4,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo91,0,nullptr },  // Inst #444 = CLGEBR
  { 445,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10388cULL, nullptr, ImplicitList1, OperandInfo14,0,nullptr },  // Inst #445 = CLGF
  { 446,	2,	0,	0,	6,	0|(1<<MCID::Compare), 0x103800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #446 = CLGFI
  { 447,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x103800ULL, nullptr, ImplicitList1, OperandInfo79,0,nullptr },  // Inst #447 = CLGFR
  { 448,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #448 = CLGFRL
  { 449,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #449 = CLGHRL
  { 450,	3,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #450 = CLGHSI
  { 451,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo41,0,nullptr },  // Inst #451 = CLGIJ
  { 452,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x103800ULL, nullptr, ImplicitList1, OperandInfo80,0,nullptr },  // Inst #452 = CLGR
  { 453,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo42,0,nullptr },  // Inst #453 = CLGRJ
  { 454,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #454 = CLGRL
  { 455,	4,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo92,0,nullptr },  // Inst #455 = CLGXBR
  { 456,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10388cULL, nullptr, ImplicitList1, OperandInfo82,0,nullptr },  // Inst #456 = CLHF
  { 457,	3,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #457 = CLHHSI
  { 458,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #458 = CLHRL
  { 459,	3,	0,	0,	4,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #459 = CLI
  { 460,	2,	0,	0,	6,	0|(1<<MCID::Compare), 0x103800ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #460 = CLIH
  { 461,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo43,0,nullptr },  // Inst #461 = CLIJ
  { 462,	3,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103804ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #462 = CLIY
  { 463,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x10388cULL, nullptr, ImplicitList1, OperandInfo93,0,nullptr },  // Inst #463 = CLMux
  { 464,	2,	0,	0,	2,	0|(1<<MCID::Compare), 0x103800ULL, nullptr, ImplicitList1, OperandInfo94,0,nullptr },  // Inst #464 = CLR
  { 465,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo44,0,nullptr },  // Inst #465 = CLRJ
  { 466,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x103800ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #466 = CLRL
  { 467,	4,	2,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo95,0,nullptr },  // Inst #467 = CLST
  { 468,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo96,0,nullptr },  // Inst #468 = CLSTLoop
  { 469,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10388cULL, nullptr, ImplicitList1, OperandInfo59,0,nullptr },  // Inst #469 = CLY
  { 470,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x388cULL, nullptr, ImplicitList1, OperandInfo93,0,nullptr },  // Inst #470 = CMux
  { 471,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo97,0,nullptr },  // Inst #471 = CPSDRdd
  { 472,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo98,0,nullptr },  // Inst #472 = CPSDRds
  { 473,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo99,0,nullptr },  // Inst #473 = CPSDRsd
  { 474,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo100,0,nullptr },  // Inst #474 = CPSDRss
  { 475,	2,	0,	0,	2,	0|(1<<MCID::Compare), 0x3800ULL, nullptr, ImplicitList1, OperandInfo94,0,nullptr },  // Inst #475 = CR
  { 476,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo44,0,nullptr },  // Inst #476 = CRJ
  { 477,	2,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x3800ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #477 = CRL
  { 478,	5,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo101,0,nullptr },  // Inst #478 = CS
  { 479,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo102,0,nullptr },  // Inst #479 = CSG
  { 480,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo101,0,nullptr },  // Inst #480 = CSY
  { 481,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3c00ULL, nullptr, ImplicitList1, OperandInfo103,0,nullptr },  // Inst #481 = CXBR
  { 482,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo104,0,nullptr },  // Inst #482 = CXFBR
  { 483,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo105,0,nullptr },  // Inst #483 = CXGBR
  { 484,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo106,0,nullptr },  // Inst #484 = CXLFBR
  { 485,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo107,0,nullptr },  // Inst #485 = CXLGBR
  { 486,	4,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x388cULL, nullptr, ImplicitList1, OperandInfo59,0,nullptr },  // Inst #486 = CY
  { 487,	1,	0,	0,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Call)|(1<<MCID::Variadic), 0x0ULL, nullptr, ImplicitList3, OperandInfo45,0,nullptr },  // Inst #487 = CallBASR
  { 488,	0,	0,	0,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, ImplicitList4, nullptr, nullptr,0,nullptr },  // Inst #488 = CallBR
  { 489,	1,	0,	0,	6,	0|(1<<MCID::Pseudo)|(1<<MCID::Call)|(1<<MCID::Variadic), 0x0ULL, nullptr, ImplicitList3, OperandInfo5,0,nullptr },  // Inst #489 = CallBRASL
  { 490,	1,	0,	0,	6,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #490 = CallJG
  { 491,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo108,0,nullptr },  // Inst #491 = CondStore16
  { 492,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo108,0,nullptr },  // Inst #492 = CondStore16Inv
  { 493,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo109,0,nullptr },  // Inst #493 = CondStore16Mux
  { 494,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo109,0,nullptr },  // Inst #494 = CondStore16MuxInv
  { 495,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo108,0,nullptr },  // Inst #495 = CondStore32
  { 496,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo108,0,nullptr },  // Inst #496 = CondStore32Inv
  { 497,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo110,0,nullptr },  // Inst #497 = CondStore64
  { 498,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo110,0,nullptr },  // Inst #498 = CondStore64Inv
  { 499,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo108,0,nullptr },  // Inst #499 = CondStore8
  { 500,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo108,0,nullptr },  // Inst #500 = CondStore8Inv
  { 501,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo109,0,nullptr },  // Inst #501 = CondStore8Mux
  { 502,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo109,0,nullptr },  // Inst #502 = CondStore8MuxInv
  { 503,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo111,0,nullptr },  // Inst #503 = CondStoreF32
  { 504,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo111,0,nullptr },  // Inst #504 = CondStoreF32Inv
  { 505,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo112,0,nullptr },  // Inst #505 = CondStoreF64
  { 506,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo112,0,nullptr },  // Inst #506 = CondStoreF64Inv
  { 507,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x108ULL, nullptr, nullptr, OperandInfo12,0,nullptr },  // Inst #507 = DDB
  { 508,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo13,0,nullptr },  // Inst #508 = DDBR
  { 509,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, nullptr, OperandInfo15,0,nullptr },  // Inst #509 = DEB
  { 510,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo16,0,nullptr },  // Inst #510 = DEBR
  { 511,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, nullptr, OperandInfo113,0,nullptr },  // Inst #511 = DL
  { 512,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, nullptr, nullptr, OperandInfo113,0,nullptr },  // Inst #512 = DLG
  { 513,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo114,0,nullptr },  // Inst #513 = DLGR
  { 514,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo115,0,nullptr },  // Inst #514 = DLR
  { 515,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, nullptr, nullptr, OperandInfo113,0,nullptr },  // Inst #515 = DSG
  { 516,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, nullptr, OperandInfo113,0,nullptr },  // Inst #516 = DSGF
  { 517,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo115,0,nullptr },  // Inst #517 = DSGFR
  { 518,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo114,0,nullptr },  // Inst #518 = DSGR
  { 519,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo39,0,nullptr },  // Inst #519 = DXBR
  { 520,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo74,0,nullptr },  // Inst #520 = EAR
  { 521,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo116,0,nullptr },  // Inst #521 = FIDBR
  { 522,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo117,0,nullptr },  // Inst #522 = FIDBRA
  { 523,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo118,0,nullptr },  // Inst #523 = FIEBR
  { 524,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo119,0,nullptr },  // Inst #524 = FIEBRA
  { 525,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo120,0,nullptr },  // Inst #525 = FIXBR
  { 526,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo121,0,nullptr },  // Inst #526 = FIXBRA
  { 527,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo17,0,nullptr },  // Inst #527 = FLOGR
  { 528,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x28ULL, nullptr, nullptr, OperandInfo20,0,nullptr },  // Inst #528 = IC
  { 529,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x28ULL, nullptr, nullptr, OperandInfo11,0,nullptr },  // Inst #529 = IC32
  { 530,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo11,0,nullptr },  // Inst #530 = IC32Y
  { 531,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo20,0,nullptr },  // Inst #531 = ICY
  { 532,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo75,0,nullptr },  // Inst #532 = IIFMux
  { 533,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo83,0,nullptr },  // Inst #533 = IIHF
  { 534,	3,	1,	0,	6,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21,0,nullptr },  // Inst #534 = IIHF64
  { 535,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo29,0,nullptr },  // Inst #535 = IIHH
  { 536,	3,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21,0,nullptr },  // Inst #536 = IIHH64
  { 537,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo29,0,nullptr },  // Inst #537 = IIHL
  { 538,	3,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21,0,nullptr },  // Inst #538 = IIHL64
  { 539,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19,0,nullptr },  // Inst #539 = IIHMux
  { 540,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo74,0,nullptr },  // Inst #540 = IILF
  { 541,	3,	1,	0,	6,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21,0,nullptr },  // Inst #541 = IILF64
  { 542,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo18,0,nullptr },  // Inst #542 = IILH
  { 543,	3,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21,0,nullptr },  // Inst #543 = IILH64
  { 544,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo18,0,nullptr },  // Inst #544 = IILL
  { 545,	3,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21,0,nullptr },  // Inst #545 = IILL64
  { 546,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19,0,nullptr },  // Inst #546 = IILMux
  { 547,	1,	1,	0,	4,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo122,0,nullptr },  // Inst #547 = IPM
  { 548,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #548 = J
  { 549,	1,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo5,0,nullptr },  // Inst #549 = JG
  { 550,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x89ULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #550 = L
  { 551,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x1dULL, nullptr, nullptr, OperandInfo123,0,nullptr },  // Inst #551 = L128
  { 552,	4,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #552 = LA
  { 553,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo124,0,nullptr },  // Inst #553 = LAA
  { 554,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo125,0,nullptr },  // Inst #554 = LAAG
  { 555,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, ImplicitList1, OperandInfo124,0,nullptr },  // Inst #555 = LAAL
  { 556,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, ImplicitList1, OperandInfo125,0,nullptr },  // Inst #556 = LAALG
  { 557,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo124,0,nullptr },  // Inst #557 = LAN
  { 558,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo125,0,nullptr },  // Inst #558 = LANG
  { 559,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo124,0,nullptr },  // Inst #559 = LAO
  { 560,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo125,0,nullptr },  // Inst #560 = LAOG
  { 561,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #561 = LARL
  { 562,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo124,0,nullptr },  // Inst #562 = LAX
  { 563,	4,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo125,0,nullptr },  // Inst #563 = LAXG
  { 564,	4,	1,	0,	6,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0xcULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #564 = LAY
  { 565,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #565 = LB
  { 566,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo82,0,nullptr },  // Inst #566 = LBH
  { 567,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo93,0,nullptr },  // Inst #567 = LBMux
  { 568,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo94,0,nullptr },  // Inst #568 = LBR
  { 569,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo61,0,nullptr },  // Inst #569 = LCDBR
  { 570,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo67,0,nullptr },  // Inst #570 = LCEBR
  { 571,	2,	1,	0,	4,	0, 0x3b800ULL, nullptr, ImplicitList1, OperandInfo79,0,nullptr },  // Inst #571 = LCGFR
  { 572,	2,	1,	0,	4,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo80,0,nullptr },  // Inst #572 = LCGR
  { 573,	2,	1,	0,	2,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo94,0,nullptr },  // Inst #573 = LCR
  { 574,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo103,0,nullptr },  // Inst #574 = LCXBR
  { 575,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x109ULL, nullptr, nullptr, OperandInfo60,0,nullptr },  // Inst #575 = LD
  { 576,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, nullptr, OperandInfo60,0,nullptr },  // Inst #576 = LDEB
  { 577,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo126,0,nullptr },  // Inst #577 = LDEBR
  { 578,	2,	1,	0,	4,	0|(1<<MCID::Bitcast), 0x0ULL, nullptr, nullptr, OperandInfo63,0,nullptr },  // Inst #578 = LDGR
  { 579,	2,	1,	0,	2,	0, 0x0ULL, nullptr, nullptr, OperandInfo61,0,nullptr },  // Inst #579 = LDR
  { 580,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103,0,nullptr },  // Inst #580 = LDXBR
  { 581,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121,0,nullptr },  // Inst #581 = LDXBRA
  { 582,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10dULL, nullptr, nullptr, OperandInfo60,0,nullptr },  // Inst #582 = LDY
  { 583,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x89ULL, nullptr, nullptr, OperandInfo66,0,nullptr },  // Inst #583 = LE
  { 584,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo127,0,nullptr },  // Inst #584 = LEDBR
  { 585,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo128,0,nullptr },  // Inst #585 = LEDBRA
  { 586,	2,	1,	0,	2,	0, 0x0ULL, nullptr, nullptr, OperandInfo67,0,nullptr },  // Inst #586 = LER
  { 587,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103,0,nullptr },  // Inst #587 = LEXBR
  { 588,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121,0,nullptr },  // Inst #588 = LEXBRA
  { 589,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x8dULL, nullptr, nullptr, OperandInfo66,0,nullptr },  // Inst #589 = LEY
  { 590,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x8dULL, nullptr, nullptr, OperandInfo82,0,nullptr },  // Inst #590 = LFH
  { 591,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10dULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #591 = LG
  { 592,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #592 = LGB
  { 593,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo80,0,nullptr },  // Inst #593 = LGBR
  { 594,	2,	1,	0,	4,	0|(1<<MCID::Bitcast), 0x0ULL, nullptr, nullptr, OperandInfo129,0,nullptr },  // Inst #594 = LGDR
  { 595,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #595 = LGF
  { 596,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #596 = LGFI
  { 597,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo79,0,nullptr },  // Inst #597 = LGFR
  { 598,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #598 = LGFRL
  { 599,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #599 = LGH
  { 600,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #600 = LGHI
  { 601,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo80,0,nullptr },  // Inst #601 = LGHR
  { 602,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #602 = LGHRL
  { 603,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo80,0,nullptr },  // Inst #603 = LGR
  { 604,	2,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #604 = LGRL
  { 605,	4,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x48ULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #605 = LH
  { 606,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo82,0,nullptr },  // Inst #606 = LHH
  { 607,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo74,0,nullptr },  // Inst #607 = LHI
  { 608,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo75,0,nullptr },  // Inst #608 = LHIMux
  { 609,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo93,0,nullptr },  // Inst #609 = LHMux
  { 610,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo94,0,nullptr },  // Inst #610 = LHR
  { 611,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo74,0,nullptr },  // Inst #611 = LHRL
  { 612,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #612 = LHY
  { 613,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #613 = LLC
  { 614,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #614 = LLCH
  { 615,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo93,0,nullptr },  // Inst #615 = LLCMux
  { 616,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo94,0,nullptr },  // Inst #616 = LLCR
  { 617,	2,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo130,0,nullptr },  // Inst #617 = LLCRMux
  { 618,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2cULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #618 = LLGC
  { 619,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo80,0,nullptr },  // Inst #619 = LLGCR
  { 620,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #620 = LLGF
  { 621,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo79,0,nullptr },  // Inst #621 = LLGFR
  { 622,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #622 = LLGFRL
  { 623,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #623 = LLGH
  { 624,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo80,0,nullptr },  // Inst #624 = LLGHR
  { 625,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #625 = LLGHRL
  { 626,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #626 = LLH
  { 627,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #627 = LLHH
  { 628,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo93,0,nullptr },  // Inst #628 = LLHMux
  { 629,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo94,0,nullptr },  // Inst #629 = LLHR
  { 630,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo74,0,nullptr },  // Inst #630 = LLHRL
  { 631,	2,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo130,0,nullptr },  // Inst #631 = LLHRMux
  { 632,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #632 = LLIHF
  { 633,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #633 = LLIHH
  { 634,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #634 = LLIHL
  { 635,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #635 = LLILF
  { 636,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #636 = LLILH
  { 637,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #637 = LLILL
  { 638,	4,	2,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo125,0,nullptr },  // Inst #638 = LMG
  { 639,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x8dULL, nullptr, nullptr, OperandInfo93,0,nullptr },  // Inst #639 = LMux
  { 640,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo61,0,nullptr },  // Inst #640 = LNDBR
  { 641,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo67,0,nullptr },  // Inst #641 = LNEBR
  { 642,	2,	1,	0,	4,	0, 0x3b800ULL, nullptr, ImplicitList1, OperandInfo79,0,nullptr },  // Inst #642 = LNGFR
  { 643,	2,	1,	0,	4,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo80,0,nullptr },  // Inst #643 = LNGR
  { 644,	2,	1,	0,	2,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo94,0,nullptr },  // Inst #644 = LNR
  { 645,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo103,0,nullptr },  // Inst #645 = LNXBR
  { 646,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x80084ULL, ImplicitList1, nullptr, OperandInfo131,0,nullptr },  // Inst #646 = LOC
  { 647,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x80104ULL, ImplicitList1, nullptr, OperandInfo132,0,nullptr },  // Inst #647 = LOCG
  { 648,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x80000ULL, ImplicitList1, nullptr, OperandInfo42,0,nullptr },  // Inst #648 = LOCGR
  { 649,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x80000ULL, ImplicitList1, nullptr, OperandInfo44,0,nullptr },  // Inst #649 = LOCR
  { 650,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo61,0,nullptr },  // Inst #650 = LPDBR
  { 651,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo67,0,nullptr },  // Inst #651 = LPEBR
  { 652,	2,	1,	0,	4,	0, 0x3b800ULL, nullptr, ImplicitList1, OperandInfo79,0,nullptr },  // Inst #652 = LPGFR
  { 653,	2,	1,	0,	4,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo80,0,nullptr },  // Inst #653 = LPGR
  { 654,	2,	1,	0,	2,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo94,0,nullptr },  // Inst #654 = LPR
  { 655,	2,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo103,0,nullptr },  // Inst #655 = LPXBR
  { 656,	2,	1,	0,	2,	0, 0x0ULL, nullptr, nullptr, OperandInfo94,0,nullptr },  // Inst #656 = LR
  { 657,	2,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo74,0,nullptr },  // Inst #657 = LRL
  { 658,	2,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo130,0,nullptr },  // Inst #658 = LRMux
  { 659,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #659 = LRV
  { 660,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #660 = LRVG
  { 661,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo80,0,nullptr },  // Inst #661 = LRVGR
  { 662,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo94,0,nullptr },  // Inst #662 = LRVR
  { 663,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x3b88cULL, nullptr, ImplicitList1, OperandInfo59,0,nullptr },  // Inst #663 = LT
  { 664,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo61,0,nullptr },  // Inst #664 = LTDBR
  { 665,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo61,0,nullptr },  // Inst #665 = LTDBRCompare
  { 666,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo67,0,nullptr },  // Inst #666 = LTEBR
  { 667,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo67,0,nullptr },  // Inst #667 = LTEBRCompare
  { 668,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x3b90cULL, nullptr, ImplicitList1, OperandInfo14,0,nullptr },  // Inst #668 = LTG
  { 669,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x3b88cULL, nullptr, ImplicitList1, OperandInfo14,0,nullptr },  // Inst #669 = LTGF
  { 670,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x3b800ULL, nullptr, ImplicitList1, OperandInfo80,0,nullptr },  // Inst #670 = LTGFR
  { 671,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x3b800ULL, nullptr, ImplicitList1, OperandInfo80,0,nullptr },  // Inst #671 = LTGR
  { 672,	2,	1,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x3b800ULL, nullptr, ImplicitList1, OperandInfo94,0,nullptr },  // Inst #672 = LTR
  { 673,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo103,0,nullptr },  // Inst #673 = LTXBR
  { 674,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo103,0,nullptr },  // Inst #674 = LTXBRCompare
  { 675,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x1dULL, nullptr, nullptr, OperandInfo133,0,nullptr },  // Inst #675 = LX
  { 676,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x108ULL, nullptr, nullptr, OperandInfo133,0,nullptr },  // Inst #676 = LXDB
  { 677,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo134,0,nullptr },  // Inst #677 = LXDBR
  { 678,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, nullptr, OperandInfo133,0,nullptr },  // Inst #678 = LXEB
  { 679,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo135,0,nullptr },  // Inst #679 = LXEBR
  { 680,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo103,0,nullptr },  // Inst #680 = LXR
  { 681,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x8dULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #681 = LY
  { 682,	1,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo136,0,nullptr },  // Inst #682 = LZDR
  { 683,	1,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo137,0,nullptr },  // Inst #683 = LZER
  { 684,	1,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo138,0,nullptr },  // Inst #684 = LZXR
  { 685,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x108ULL, nullptr, nullptr, OperandInfo139,0,nullptr },  // Inst #685 = MADB
  { 686,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo140,0,nullptr },  // Inst #686 = MADBR
  { 687,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, nullptr, OperandInfo141,0,nullptr },  // Inst #687 = MAEB
  { 688,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo142,0,nullptr },  // Inst #688 = MAEBR
  { 689,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x108ULL, nullptr, nullptr, OperandInfo12,0,nullptr },  // Inst #689 = MDB
  { 690,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo13,0,nullptr },  // Inst #690 = MDBR
  { 691,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x88ULL, nullptr, nullptr, OperandInfo12,0,nullptr },  // Inst #691 = MDEB
  { 692,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo143,0,nullptr },  // Inst #692 = MDEBR
  { 693,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, nullptr, OperandInfo15,0,nullptr },  // Inst #693 = MEEB
  { 694,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16,0,nullptr },  // Inst #694 = MEEBR
  { 695,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo21,0,nullptr },  // Inst #695 = MGHI
  { 696,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x48ULL, nullptr, nullptr, OperandInfo11,0,nullptr },  // Inst #696 = MH
  { 697,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo18,0,nullptr },  // Inst #697 = MHI
  { 698,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x4cULL, nullptr, nullptr, OperandInfo11,0,nullptr },  // Inst #698 = MHY
  { 699,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, nullptr, nullptr, OperandInfo113,0,nullptr },  // Inst #699 = MLG
  { 700,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo114,0,nullptr },  // Inst #700 = MLGR
  { 701,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, nullptr, OperandInfo11,0,nullptr },  // Inst #701 = MS
  { 702,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x108ULL, nullptr, nullptr, OperandInfo139,0,nullptr },  // Inst #702 = MSDB
  { 703,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo140,0,nullptr },  // Inst #703 = MSDBR
  { 704,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, nullptr, OperandInfo141,0,nullptr },  // Inst #704 = MSEB
  { 705,	4,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo142,0,nullptr },  // Inst #705 = MSEBR
  { 706,	3,	1,	0,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo18,0,nullptr },  // Inst #706 = MSFI
  { 707,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, nullptr, nullptr, OperandInfo20,0,nullptr },  // Inst #707 = MSG
  { 708,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, nullptr, OperandInfo20,0,nullptr },  // Inst #708 = MSGF
  { 709,	3,	1,	0,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo21,0,nullptr },  // Inst #709 = MSGFI
  { 710,	3,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo22,0,nullptr },  // Inst #710 = MSGFR
  { 711,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo24,0,nullptr },  // Inst #711 = MSGR
  { 712,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo30,0,nullptr },  // Inst #712 = MSR
  { 713,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, nullptr, OperandInfo11,0,nullptr },  // Inst #713 = MSY
  { 714,	5,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo84,0,nullptr },  // Inst #714 = MVC
  { 715,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo85,0,nullptr },  // Inst #715 = MVCLoop
  { 716,	5,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo86,0,nullptr },  // Inst #716 = MVCSequence
  { 717,	3,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo26,0,nullptr },  // Inst #717 = MVGHI
  { 718,	3,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo26,0,nullptr },  // Inst #718 = MVHHI
  { 719,	3,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo26,0,nullptr },  // Inst #719 = MVHI
  { 720,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo26,0,nullptr },  // Inst #720 = MVI
  { 721,	3,	0,	0,	6,	0|(1<<MCID::MayStore), 0x4ULL, nullptr, nullptr, OperandInfo26,0,nullptr },  // Inst #721 = MVIY
  { 722,	4,	2,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo95,0,nullptr },  // Inst #722 = MVST
  { 723,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo96,0,nullptr },  // Inst #723 = MVSTLoop
  { 724,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo39,0,nullptr },  // Inst #724 = MXBR
  { 725,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x108ULL, nullptr, nullptr, OperandInfo144,0,nullptr },  // Inst #725 = MXDB
  { 726,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo145,0,nullptr },  // Inst #726 = MXDBR
  { 727,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x23088ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #727 = N
  { 728,	5,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo84,0,nullptr },  // Inst #728 = NC
  { 729,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo85,0,nullptr },  // Inst #729 = NCLoop
  { 730,	5,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86,0,nullptr },  // Inst #730 = NCSequence
  { 731,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2310cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #731 = NG
  { 732,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x23000ULL, nullptr, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #732 = NGR
  { 733,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x23000ULL, nullptr, ImplicitList1, OperandInfo25,0,nullptr },  // Inst #733 = NGRK
  { 734,	3,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #734 = NI
  { 735,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x23000ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #735 = NIFMux
  { 736,	3,	1,	0,	6,	0|(1<<MCID::ConvertibleTo3Addr), 0x23000ULL, nullptr, ImplicitList1, OperandInfo29,0,nullptr },  // Inst #736 = NIHF
  { 737,	3,	1,	0,	6,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #737 = NIHF64
  { 738,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo29,0,nullptr },  // Inst #738 = NIHH
  { 739,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #739 = NIHH64
  { 740,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo29,0,nullptr },  // Inst #740 = NIHL
  { 741,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #741 = NIHL64
  { 742,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #742 = NIHMux
  { 743,	3,	1,	0,	6,	0|(1<<MCID::ConvertibleTo3Addr), 0x23000ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #743 = NILF
  { 744,	3,	1,	0,	6,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #744 = NILF64
  { 745,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #745 = NILH
  { 746,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #746 = NILH64
  { 747,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #747 = NILL
  { 748,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #748 = NILL64
  { 749,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #749 = NILMux
  { 750,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #750 = NIY
  { 751,	3,	1,	0,	2,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x23000ULL, nullptr, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #751 = NR
  { 752,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x23000ULL, nullptr, ImplicitList1, OperandInfo31,0,nullptr },  // Inst #752 = NRK
  { 753,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2308cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #753 = NY
  { 754,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x23088ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #754 = O
  { 755,	5,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo84,0,nullptr },  // Inst #755 = OC
  { 756,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo85,0,nullptr },  // Inst #756 = OCLoop
  { 757,	5,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86,0,nullptr },  // Inst #757 = OCSequence
  { 758,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2310cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #758 = OG
  { 759,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x23000ULL, nullptr, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #759 = OGR
  { 760,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x23000ULL, nullptr, ImplicitList1, OperandInfo25,0,nullptr },  // Inst #760 = OGRK
  { 761,	3,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #761 = OI
  { 762,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x23000ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #762 = OIFMux
  { 763,	3,	1,	0,	6,	0, 0x23000ULL, nullptr, ImplicitList1, OperandInfo29,0,nullptr },  // Inst #763 = OIHF
  { 764,	3,	1,	0,	6,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #764 = OIHF64
  { 765,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo29,0,nullptr },  // Inst #765 = OIHH
  { 766,	3,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #766 = OIHH64
  { 767,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo29,0,nullptr },  // Inst #767 = OIHL
  { 768,	3,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #768 = OIHL64
  { 769,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #769 = OIHMux
  { 770,	3,	1,	0,	6,	0, 0x23000ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #770 = OILF
  { 771,	3,	1,	0,	6,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #771 = OILF64
  { 772,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #772 = OILH
  { 773,	3,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #773 = OILH64
  { 774,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #774 = OILL
  { 775,	3,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #775 = OILL64
  { 776,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #776 = OILMux
  { 777,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #777 = OIY
  { 778,	3,	1,	0,	2,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x23000ULL, nullptr, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #778 = OR
  { 779,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x23000ULL, nullptr, ImplicitList1, OperandInfo31,0,nullptr },  // Inst #779 = ORK
  { 780,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2308cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #780 = OY
  { 781,	4,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo146,0,nullptr },  // Inst #781 = PFD
  { 782,	2,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo7,0,nullptr },  // Inst #782 = PFDRL
  { 783,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x3b800ULL, nullptr, ImplicitList1, OperandInfo147,0,nullptr },  // Inst #783 = RISBG
  { 784,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo148,0,nullptr },  // Inst #784 = RISBG32
  { 785,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo149,0,nullptr },  // Inst #785 = RISBHG
  { 786,	6,	1,	0,	6,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo150,0,nullptr },  // Inst #786 = RISBHH
  { 787,	6,	1,	0,	6,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo151,0,nullptr },  // Inst #787 = RISBHL
  { 788,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo152,0,nullptr },  // Inst #788 = RISBLG
  { 789,	6,	1,	0,	6,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo153,0,nullptr },  // Inst #789 = RISBLH
  { 790,	6,	1,	0,	6,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo148,0,nullptr },  // Inst #790 = RISBLL
  { 791,	6,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo154,0,nullptr },  // Inst #791 = RISBMux
  { 792,	4,	1,	0,	6,	0, 0x4ULL, nullptr, nullptr, OperandInfo155,0,nullptr },  // Inst #792 = RLL
  { 793,	4,	1,	0,	6,	0, 0x4ULL, nullptr, nullptr, OperandInfo156,0,nullptr },  // Inst #793 = RLLG
  { 794,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo147,0,nullptr },  // Inst #794 = RNSBG
  { 795,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo147,0,nullptr },  // Inst #795 = ROSBG
  { 796,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo147,0,nullptr },  // Inst #796 = RXSBG
  { 797,	0,	0,	0,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, nullptr, nullptr, nullptr,0,nullptr },  // Inst #797 = Return
  { 798,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x23c88ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #798 = S
  { 799,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x3fd08ULL, nullptr, ImplicitList1, OperandInfo12,0,nullptr },  // Inst #799 = SDB
  { 800,	3,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo13,0,nullptr },  // Inst #800 = SDBR
  { 801,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x3fc88ULL, nullptr, ImplicitList1, OperandInfo15,0,nullptr },  // Inst #801 = SEB
  { 802,	3,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo16,0,nullptr },  // Inst #802 = SEBR
  { 803,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x23d0cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #803 = SG
  { 804,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x23c8cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #804 = SGF
  { 805,	3,	1,	0,	4,	0, 0x23c00ULL, nullptr, ImplicitList1, OperandInfo22,0,nullptr },  // Inst #805 = SGFR
  { 806,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #806 = SGR
  { 807,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo25,0,nullptr },  // Inst #807 = SGRK
  { 808,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x23c48ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #808 = SH
  { 809,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x23c4cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #809 = SHY
  { 810,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #810 = SL
  { 811,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, ImplicitList1, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #811 = SLB
  { 812,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, ImplicitList1, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #812 = SLBG
  { 813,	3,	1,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #813 = SLBR
  { 814,	3,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #814 = SLFI
  { 815,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x10cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #815 = SLG
  { 816,	3,	1,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #816 = SLGBR
  { 817,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #817 = SLGF
  { 818,	3,	1,	0,	6,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #818 = SLGFI
  { 819,	3,	1,	0,	4,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo22,0,nullptr },  // Inst #819 = SLGFR
  { 820,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #820 = SLGR
  { 821,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo25,0,nullptr },  // Inst #821 = SLGRK
  { 822,	4,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, nullptr, OperandInfo157,0,nullptr },  // Inst #822 = SLL
  { 823,	4,	1,	0,	6,	0, 0x4ULL, nullptr, nullptr, OperandInfo156,0,nullptr },  // Inst #823 = SLLG
  { 824,	4,	1,	0,	6,	0, 0x4ULL, nullptr, nullptr, OperandInfo155,0,nullptr },  // Inst #824 = SLLK
  { 825,	3,	1,	0,	2,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #825 = SLR
  { 826,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo31,0,nullptr },  // Inst #826 = SLRK
  { 827,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #827 = SLY
  { 828,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x108ULL, nullptr, nullptr, OperandInfo60,0,nullptr },  // Inst #828 = SQDB
  { 829,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo61,0,nullptr },  // Inst #829 = SQDBR
  { 830,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x88ULL, nullptr, nullptr, OperandInfo66,0,nullptr },  // Inst #830 = SQEB
  { 831,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo67,0,nullptr },  // Inst #831 = SQEBR
  { 832,	2,	1,	0,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo103,0,nullptr },  // Inst #832 = SQXBR
  { 833,	3,	1,	0,	2,	0|(1<<MCID::ConvertibleTo3Addr), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #833 = SR
  { 834,	4,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x3b800ULL, nullptr, ImplicitList1, OperandInfo157,0,nullptr },  // Inst #834 = SRA
  { 835,	4,	1,	0,	6,	0, 0x3b804ULL, nullptr, ImplicitList1, OperandInfo156,0,nullptr },  // Inst #835 = SRAG
  { 836,	4,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x3b804ULL, nullptr, ImplicitList1, OperandInfo155,0,nullptr },  // Inst #836 = SRAK
  { 837,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x23c00ULL, nullptr, ImplicitList1, OperandInfo31,0,nullptr },  // Inst #837 = SRK
  { 838,	4,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, nullptr, nullptr, OperandInfo157,0,nullptr },  // Inst #838 = SRL
  { 839,	4,	1,	0,	6,	0, 0x4ULL, nullptr, nullptr, OperandInfo156,0,nullptr },  // Inst #839 = SRLG
  { 840,	4,	1,	0,	6,	0, 0x4ULL, nullptr, nullptr, OperandInfo155,0,nullptr },  // Inst #840 = SRLK
  { 841,	4,	2,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo95,0,nullptr },  // Inst #841 = SRST
  { 842,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo96,0,nullptr },  // Inst #842 = SRSTLoop
  { 843,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x8aULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #843 = ST
  { 844,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x1eULL, nullptr, nullptr, OperandInfo123,0,nullptr },  // Inst #844 = ST128
  { 845,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x28ULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #845 = STC
  { 846,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x2cULL, nullptr, nullptr, OperandInfo82,0,nullptr },  // Inst #846 = STCH
  { 847,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x2cULL, nullptr, nullptr, OperandInfo93,0,nullptr },  // Inst #847 = STCMux
  { 848,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x2cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #848 = STCY
  { 849,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x10aULL, nullptr, nullptr, OperandInfo60,0,nullptr },  // Inst #849 = STD
  { 850,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x10eULL, nullptr, nullptr, OperandInfo60,0,nullptr },  // Inst #850 = STDY
  { 851,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x8aULL, nullptr, nullptr, OperandInfo66,0,nullptr },  // Inst #851 = STE
  { 852,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x8eULL, nullptr, nullptr, OperandInfo66,0,nullptr },  // Inst #852 = STEY
  { 853,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x8eULL, nullptr, nullptr, OperandInfo82,0,nullptr },  // Inst #853 = STFH
  { 854,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x10eULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #854 = STG
  { 855,	2,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo57,0,nullptr },  // Inst #855 = STGRL
  { 856,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x48ULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #856 = STH
  { 857,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x4cULL, nullptr, nullptr, OperandInfo82,0,nullptr },  // Inst #857 = STHH
  { 858,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x2cULL, nullptr, nullptr, OperandInfo93,0,nullptr },  // Inst #858 = STHMux
  { 859,	2,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo74,0,nullptr },  // Inst #859 = STHRL
  { 860,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x4cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #860 = STHY
  { 861,	4,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, nullptr, OperandInfo125,0,nullptr },  // Inst #861 = STMG
  { 862,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x8eULL, nullptr, nullptr, OperandInfo93,0,nullptr },  // Inst #862 = STMux
  { 863,	5,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x80084ULL, ImplicitList1, nullptr, OperandInfo158,0,nullptr },  // Inst #863 = STOC
  { 864,	5,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x80104ULL, ImplicitList1, nullptr, OperandInfo159,0,nullptr },  // Inst #864 = STOCG
  { 865,	2,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo74,0,nullptr },  // Inst #865 = STRL
  { 866,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x8cULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #866 = STRV
  { 867,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x10cULL, nullptr, nullptr, OperandInfo14,0,nullptr },  // Inst #867 = STRVG
  { 868,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x1eULL, nullptr, nullptr, OperandInfo133,0,nullptr },  // Inst #868 = STX
  { 869,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0x8eULL, nullptr, nullptr, OperandInfo59,0,nullptr },  // Inst #869 = STY
  { 870,	3,	1,	0,	4,	0, 0x3fc00ULL, nullptr, ImplicitList1, OperandInfo39,0,nullptr },  // Inst #870 = SXBR
  { 871,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x23c8cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #871 = SY
  { 872,	5,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo160,0,nullptr },  // Inst #872 = Select32
  { 873,	5,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo161,0,nullptr },  // Inst #873 = Select32Mux
  { 874,	5,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo162,0,nullptr },  // Inst #874 = Select64
  { 875,	5,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo163,0,nullptr },  // Inst #875 = SelectF128
  { 876,	5,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo164,0,nullptr },  // Inst #876 = SelectF32
  { 877,	5,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo165,0,nullptr },  // Inst #877 = SelectF64
  { 878,	0,	0,	0,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x0ULL, nullptr, nullptr, nullptr,0,nullptr },  // Inst #878 = Serialize
  { 879,	3,	0,	0,	4,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x0ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #879 = TM
  { 880,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x0ULL, nullptr, ImplicitList1, OperandInfo83,0,nullptr },  // Inst #880 = TMHH
  { 881,	2,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Compare), 0x0ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #881 = TMHH64
  { 882,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x0ULL, nullptr, ImplicitList1, OperandInfo83,0,nullptr },  // Inst #882 = TMHL
  { 883,	2,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Compare), 0x0ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #883 = TMHL64
  { 884,	2,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo75,0,nullptr },  // Inst #884 = TMHMux
  { 885,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x0ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #885 = TMLH
  { 886,	2,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Compare), 0x0ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #886 = TMLH64
  { 887,	2,	0,	0,	4,	0|(1<<MCID::Compare), 0x0ULL, nullptr, ImplicitList1, OperandInfo74,0,nullptr },  // Inst #887 = TMLL
  { 888,	2,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Compare), 0x0ULL, nullptr, ImplicitList1, OperandInfo57,0,nullptr },  // Inst #888 = TMLL64
  { 889,	2,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo75,0,nullptr },  // Inst #889 = TMLMux
  { 890,	3,	0,	0,	6,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x4ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #890 = TMY
  { 891,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x23088ULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #891 = X
  { 892,	5,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo84,0,nullptr },  // Inst #892 = XC
  { 893,	6,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo85,0,nullptr },  // Inst #893 = XCLoop
  { 894,	5,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86,0,nullptr },  // Inst #894 = XCSequence
  { 895,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2310cULL, nullptr, ImplicitList1, OperandInfo20,0,nullptr },  // Inst #895 = XG
  { 896,	3,	1,	0,	4,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x23000ULL, nullptr, ImplicitList1, OperandInfo24,0,nullptr },  // Inst #896 = XGR
  { 897,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x23000ULL, nullptr, ImplicitList1, OperandInfo25,0,nullptr },  // Inst #897 = XGRK
  { 898,	3,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #898 = XI
  { 899,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x23000ULL, nullptr, ImplicitList1, OperandInfo19,0,nullptr },  // Inst #899 = XIFMux
  { 900,	3,	1,	0,	6,	0, 0x23000ULL, nullptr, ImplicitList1, OperandInfo29,0,nullptr },  // Inst #900 = XIHF
  { 901,	3,	1,	0,	6,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #901 = XIHF64
  { 902,	3,	1,	0,	6,	0, 0x23000ULL, nullptr, ImplicitList1, OperandInfo18,0,nullptr },  // Inst #902 = XILF
  { 903,	3,	1,	0,	6,	0|(1<<MCID::Pseudo), 0x0ULL, nullptr, ImplicitList1, OperandInfo21,0,nullptr },  // Inst #903 = XILF64
  { 904,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, nullptr, ImplicitList1, OperandInfo26,0,nullptr },  // Inst #904 = XIY
  { 905,	3,	1,	0,	2,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x23000ULL, nullptr, ImplicitList1, OperandInfo30,0,nullptr },  // Inst #905 = XR
  { 906,	3,	1,	0,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x23000ULL, nullptr, ImplicitList1, OperandInfo31,0,nullptr },  // Inst #906 = XRK
  { 907,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x2308cULL, nullptr, ImplicitList1, OperandInfo11,0,nullptr },  // Inst #907 = XY
  { 908,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo166,0,nullptr },  // Inst #908 = ZEXT128_32
  { 909,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17,0,nullptr },  // Inst #909 = ZEXT128_64
};

extern const char SystemZInstrNameData[] = {
  /* 0 */ 'I', 'C', '3', '2', 0,
  /* 5 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', 'F', '3', '2', 0,
  /* 18 */ 'S', 'e', 'l', 'e', 'c', 't', 'F', '3', '2', 0,
  /* 28 */ 'R', 'I', 'S', 'B', 'G', '3', '2', 0,
  /* 36 */ 'Z', 'E', 'X', 'T', '1', '2', '8', '_', '3', '2', 0,
  /* 47 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', '3', '2', 0,
  /* 67 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', '3', '2', 0,
  /* 86 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', '3', '2', 0,
  /* 101 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', '3', '2', 0,
  /* 121 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', '3', '2', 0,
  /* 140 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '3', '2', 0,
  /* 152 */ 'S', 'e', 'l', 'e', 'c', 't', '3', '2', 0,
  /* 161 */ 'I', 'I', 'H', 'F', '6', '4', 0,
  /* 168 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'F', '6', '4', 0,
  /* 187 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'H', 'F', '6', '4', 0,
  /* 206 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'I', 'H', 'F', '6', '4', 0,
  /* 225 */ 'I', 'I', 'L', 'F', '6', '4', 0,
  /* 232 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'F', '6', '4', 0,
  /* 251 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'F', '6', '4', 0,
  /* 270 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'I', 'L', 'F', '6', '4', 0,
  /* 289 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', 'F', '6', '4', 0,
  /* 302 */ 'S', 'e', 'l', 'e', 'c', 't', 'F', '6', '4', 0,
  /* 312 */ 'I', 'I', 'H', 'H', '6', '4', 0,
  /* 319 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'H', '6', '4', 0,
  /* 338 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'H', 'H', '6', '4', 0,
  /* 357 */ 'T', 'M', 'H', 'H', '6', '4', 0,
  /* 364 */ 'I', 'I', 'L', 'H', '6', '4', 0,
  /* 371 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'H', '6', '4', 0,
  /* 390 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'H', '6', '4', 0,
  /* 409 */ 'T', 'M', 'L', 'H', '6', '4', 0,
  /* 416 */ 'I', 'I', 'H', 'L', '6', '4', 0,
  /* 423 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'L', '6', '4', 0,
  /* 442 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'H', 'L', '6', '4', 0,
  /* 461 */ 'T', 'M', 'H', 'L', '6', '4', 0,
  /* 468 */ 'I', 'I', 'L', 'L', '6', '4', 0,
  /* 475 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'L', '6', '4', 0,
  /* 494 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'L', '6', '4', 0,
  /* 513 */ 'T', 'M', 'L', 'L', '6', '4', 0,
  /* 520 */ 'A', 'E', 'X', 'T', '1', '2', '8', '_', '6', '4', 0,
  /* 531 */ 'Z', 'E', 'X', 'T', '1', '2', '8', '_', '6', '4', 0,
  /* 542 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', '6', '4', 0,
  /* 562 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', '6', '4', 0,
  /* 581 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', '6', '4', 0,
  /* 596 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', '6', '4', 0,
  /* 616 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', '6', '4', 0,
  /* 635 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '6', '4', 0,
  /* 647 */ 'S', 'e', 'l', 'e', 'c', 't', '6', '4', 0,
  /* 656 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '1', '6', 0,
  /* 668 */ 'S', 'e', 'l', 'e', 'c', 't', 'F', '1', '2', '8', 0,
  /* 679 */ 'L', '1', '2', '8', 0,
  /* 684 */ 'S', 'T', '1', '2', '8', 0,
  /* 690 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '8', 0,
  /* 701 */ 'L', 'A', 'A', 0,
  /* 705 */ 'L', 'A', 0,
  /* 708 */ 'L', 'E', 'D', 'B', 'R', 'A', 0,
  /* 715 */ 'F', 'I', 'D', 'B', 'R', 'A', 0,
  /* 722 */ 'F', 'I', 'E', 'B', 'R', 'A', 0,
  /* 729 */ 'L', 'D', 'X', 'B', 'R', 'A', 0,
  /* 736 */ 'L', 'E', 'X', 'B', 'R', 'A', 0,
  /* 743 */ 'F', 'I', 'X', 'B', 'R', 'A', 0,
  /* 750 */ 'S', 'R', 'A', 0,
  /* 754 */ 'M', 'A', 'D', 'B', 0,
  /* 759 */ 'C', 'D', 'B', 0,
  /* 763 */ 'D', 'D', 'B', 0,
  /* 767 */ 'M', 'D', 'B', 0,
  /* 771 */ 'S', 'Q', 'D', 'B', 0,
  /* 776 */ 'M', 'S', 'D', 'B', 0,
  /* 781 */ 'L', 'X', 'D', 'B', 0,
  /* 786 */ 'M', 'X', 'D', 'B', 0,
  /* 791 */ 'M', 'A', 'E', 'B', 0,
  /* 796 */ 'C', 'E', 'B', 0,
  /* 800 */ 'L', 'D', 'E', 'B', 0,
  /* 805 */ 'M', 'D', 'E', 'B', 0,
  /* 810 */ 'M', 'E', 'E', 'B', 0,
  /* 815 */ 'S', 'Q', 'E', 'B', 0,
  /* 820 */ 'M', 'S', 'E', 'B', 0,
  /* 825 */ 'L', 'X', 'E', 'B', 0,
  /* 830 */ 'L', 'G', 'B', 0,
  /* 834 */ 'S', 'L', 'B', 0,
  /* 838 */ 'L', 'L', 'G', 'C', 0,
  /* 843 */ 'I', 'C', 0,
  /* 846 */ 'A', 'L', 'C', 0,
  /* 850 */ 'C', 'L', 'C', 0,
  /* 854 */ 'L', 'L', 'C', 0,
  /* 858 */ 'N', 'C', 0,
  /* 861 */ 'A', 's', 'm', 'N', 'H', 'E', 'L', 'O', 'C', 0,
  /* 871 */ 'A', 's', 'm', 'H', 'E', 'L', 'O', 'C', 0,
  /* 880 */ 'A', 's', 'm', 'N', 'L', 'E', 'L', 'O', 'C', 0,
  /* 890 */ 'A', 's', 'm', 'L', 'E', 'L', 'O', 'C', 0,
  /* 899 */ 'A', 's', 'm', 'N', 'E', 'L', 'O', 'C', 0,
  /* 908 */ 'A', 's', 'm', 'E', 'L', 'O', 'C', 0,
  /* 916 */ 'A', 's', 'm', 'N', 'L', 'H', 'L', 'O', 'C', 0,
  /* 926 */ 'A', 's', 'm', 'L', 'H', 'L', 'O', 'C', 0,
  /* 935 */ 'A', 's', 'm', 'N', 'H', 'L', 'O', 'C', 0,
  /* 944 */ 'A', 's', 'm', 'H', 'L', 'O', 'C', 0,
  /* 952 */ 'A', 'D', 'J', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 964 */ 'A', 's', 'm', 'N', 'L', 'L', 'O', 'C', 0,
  /* 973 */ 'A', 's', 'm', 'L', 'L', 'O', 'C', 0,
  /* 981 */ 'A', 's', 'm', 'N', 'O', 'L', 'O', 'C', 0,
  /* 990 */ 'A', 's', 'm', 'O', 'L', 'O', 'C', 0,
  /* 998 */ 'A', 's', 'm', 'L', 'O', 'C', 0,
  /* 1005 */ 'A', 's', 'm', 'N', 'H', 'E', 'S', 'T', 'O', 'C', 0,
  /* 1016 */ 'A', 's', 'm', 'H', 'E', 'S', 'T', 'O', 'C', 0,
  /* 1026 */ 'A', 's', 'm', 'N', 'L', 'E', 'S', 'T', 'O', 'C', 0,
  /* 1037 */ 'A', 's', 'm', 'L', 'E', 'S', 'T', 'O', 'C', 0,
  /* 1047 */ 'A', 's', 'm', 'N', 'E', 'S', 'T', 'O', 'C', 0,
  /* 1057 */ 'A', 's', 'm', 'E', 'S', 'T', 'O', 'C', 0,
  /* 1066 */ 'A', 's', 'm', 'N', 'L', 'H', 'S', 'T', 'O', 'C', 0,
  /* 1077 */ 'A', 's', 'm', 'L', 'H', 'S', 'T', 'O', 'C', 0,
  /* 1087 */ 'A', 's', 'm', 'N', 'H', 'S', 'T', 'O', 'C', 0,
  /* 1097 */ 'A', 's', 'm', 'H', 'S', 'T', 'O', 'C', 0,
  /* 1106 */ 'A', 's', 'm', 'N', 'L', 'S', 'T', 'O', 'C', 0,
  /* 1116 */ 'A', 's', 'm', 'L', 'S', 'T', 'O', 'C', 0,
  /* 1125 */ 'A', 's', 'm', 'N', 'O', 'S', 'T', 'O', 'C', 0,
  /* 1135 */ 'A', 's', 'm', 'O', 'S', 'T', 'O', 'C', 0,
  /* 1144 */ 'A', 's', 'm', 'S', 'T', 'O', 'C', 0,
  /* 1152 */ 'A', 's', 'm', 'B', 'R', 'C', 0,
  /* 1159 */ 'S', 'T', 'C', 0,
  /* 1163 */ 'M', 'V', 'C', 0,
  /* 1167 */ 'X', 'C', 0,
  /* 1170 */ 'P', 'F', 'D', 0,
  /* 1174 */ 'L', 'D', 0,
  /* 1177 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 1190 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 1207 */ 'S', 'T', 'D', 0,
  /* 1211 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 1224 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1231 */ 'S', 'T', 'E', 0,
  /* 1235 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1245 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 1258 */ 'A', 'G', 'F', 0,
  /* 1262 */ 'C', 'G', 'F', 0,
  /* 1266 */ 'A', 'L', 'G', 'F', 0,
  /* 1271 */ 'C', 'L', 'G', 'F', 0,
  /* 1276 */ 'L', 'L', 'G', 'F', 0,
  /* 1281 */ 'S', 'L', 'G', 'F', 0,
  /* 1286 */ 'D', 'S', 'G', 'F', 0,
  /* 1291 */ 'M', 'S', 'G', 'F', 0,
  /* 1296 */ 'L', 'T', 'G', 'F', 0,
  /* 1301 */ 'C', 'H', 'F', 0,
  /* 1305 */ 'I', 'I', 'H', 'F', 0,
  /* 1310 */ 'L', 'L', 'I', 'H', 'F', 0,
  /* 1316 */ 'N', 'I', 'H', 'F', 0,
  /* 1321 */ 'O', 'I', 'H', 'F', 0,
  /* 1326 */ 'X', 'I', 'H', 'F', 0,
  /* 1331 */ 'C', 'L', 'H', 'F', 0,
  /* 1336 */ 'I', 'I', 'L', 'F', 0,
  /* 1341 */ 'L', 'L', 'I', 'L', 'F', 0,
  /* 1347 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'F', 0,
  /* 1364 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'F', 0,
  /* 1381 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'I', 'L', 'F', 0,
  /* 1398 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'X', 'I', 'L', 'F', 0,
  /* 1416 */ 'L', 'A', 'A', 'G', 0,
  /* 1421 */ 'S', 'R', 'A', 'G', 0,
  /* 1426 */ 'S', 'L', 'B', 'G', 0,
  /* 1431 */ 'R', 'I', 'S', 'B', 'G', 0,
  /* 1437 */ 'R', 'N', 'S', 'B', 'G', 0,
  /* 1443 */ 'R', 'O', 'S', 'B', 'G', 0,
  /* 1449 */ 'R', 'X', 'S', 'B', 'G', 0,
  /* 1455 */ 'A', 'L', 'C', 'G', 0,
  /* 1460 */ 'A', 's', 'm', 'N', 'H', 'E', 'L', 'O', 'C', 'G', 0,
  /* 1471 */ 'A', 's', 'm', 'H', 'E', 'L', 'O', 'C', 'G', 0,
  /* 1481 */ 'A', 's', 'm', 'N', 'L', 'E', 'L', 'O', 'C', 'G', 0,
  /* 1492 */ 'A', 's', 'm', 'L', 'E', 'L', 'O', 'C', 'G', 0,
  /* 1502 */ 'A', 's', 'm', 'N', 'E', 'L', 'O', 'C', 'G', 0,
  /* 1512 */ 'A', 's', 'm', 'E', 'L', 'O', 'C', 'G', 0,
  /* 1521 */ 'A', 's', 'm', 'N', 'L', 'H', 'L', 'O', 'C', 'G', 0,
  /* 1532 */ 'A', 's', 'm', 'L', 'H', 'L', 'O', 'C', 'G', 0,
  /* 1542 */ 'A', 's', 'm', 'N', 'H', 'L', 'O', 'C', 'G', 0,
  /* 1552 */ 'A', 's', 'm', 'H', 'L', 'O', 'C', 'G', 0,
  /* 1561 */ 'A', 's', 'm', 'N', 'L', 'L', 'O', 'C', 'G', 0,
  /* 1571 */ 'A', 's', 'm', 'L', 'L', 'O', 'C', 'G', 0,
  /* 1580 */ 'A', 's', 'm', 'N', 'O', 'L', 'O', 'C', 'G', 0,
  /* 1590 */ 'A', 's', 'm', 'O', 'L', 'O', 'C', 'G', 0,
  /* 1599 */ 'A', 's', 'm', 'L', 'O', 'C', 'G', 0,
  /* 1607 */ 'A', 's', 'm', 'N', 'H', 'E', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1619 */ 'A', 's', 'm', 'H', 'E', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1630 */ 'A', 's', 'm', 'N', 'L', 'E', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1642 */ 'A', 's', 'm', 'L', 'E', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1653 */ 'A', 's', 'm', 'N', 'E', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1664 */ 'A', 's', 'm', 'E', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1674 */ 'A', 's', 'm', 'N', 'L', 'H', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1686 */ 'A', 's', 'm', 'L', 'H', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1697 */ 'A', 's', 'm', 'N', 'H', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1708 */ 'A', 's', 'm', 'H', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1718 */ 'A', 's', 'm', 'N', 'L', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1729 */ 'A', 's', 'm', 'L', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1739 */ 'A', 's', 'm', 'N', 'O', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1750 */ 'A', 's', 'm', 'O', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1760 */ 'A', 's', 'm', 'S', 'T', 'O', 'C', 'G', 0,
  /* 1769 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1784 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1798 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 1812 */ 'R', 'I', 'S', 'B', 'H', 'G', 0,
  /* 1819 */ 'A', 's', 'm', 'N', 'H', 'E', 'J', 'G', 0,
  /* 1828 */ 'A', 's', 'm', 'H', 'E', 'J', 'G', 0,
  /* 1836 */ 'A', 's', 'm', 'N', 'L', 'E', 'J', 'G', 0,
  /* 1845 */ 'A', 's', 'm', 'L', 'E', 'J', 'G', 0,
  /* 1853 */ 'A', 's', 'm', 'N', 'E', 'J', 'G', 0,
  /* 1861 */ 'A', 's', 'm', 'E', 'J', 'G', 0,
  /* 1868 */ 'A', 's', 'm', 'N', 'L', 'H', 'J', 'G', 0,
  /* 1877 */ 'A', 's', 'm', 'L', 'H', 'J', 'G', 0,
  /* 1885 */ 'A', 's', 'm', 'N', 'H', 'J', 'G', 0,
  /* 1893 */ 'A', 's', 'm', 'H', 'J', 'G', 0,
  /* 1900 */ 'A', 's', 'm', 'N', 'L', 'J', 'G', 0,
  /* 1908 */ 'A', 's', 'm', 'L', 'J', 'G', 0,
  /* 1915 */ 'A', 's', 'm', 'N', 'O', 'J', 'G', 0,
  /* 1923 */ 'A', 's', 'm', 'O', 'J', 'G', 0,
  /* 1930 */ 'C', 'a', 'l', 'l', 'J', 'G', 0,
  /* 1937 */ 'L', 'A', 'A', 'L', 'G', 0,
  /* 1943 */ 'R', 'I', 'S', 'B', 'L', 'G', 0,
  /* 1950 */ 'C', 'L', 'G', 0,
  /* 1954 */ 'D', 'L', 'G', 0,
  /* 1958 */ 'R', 'L', 'L', 'G', 0,
  /* 1963 */ 'S', 'L', 'L', 'G', 0,
  /* 1968 */ 'M', 'L', 'G', 0,
  /* 1972 */ 'S', 'R', 'L', 'G', 0,
  /* 1977 */ 'S', 'L', 'G', 0,
  /* 1981 */ 'L', 'M', 'G', 0,
  /* 1985 */ 'S', 'T', 'M', 'G', 0,
  /* 1990 */ 'L', 'A', 'N', 'G', 0,
  /* 1995 */ 'L', 'A', 'O', 'G', 0,
  /* 2000 */ 'C', 'S', 'G', 0,
  /* 2004 */ 'D', 'S', 'G', 0,
  /* 2008 */ 'M', 'S', 'G', 0,
  /* 2012 */ 'B', 'R', 'C', 'T', 'G', 0,
  /* 2018 */ 'L', 'T', 'G', 0,
  /* 2022 */ 'S', 'T', 'G', 0,
  /* 2026 */ 'L', 'R', 'V', 'G', 0,
  /* 2031 */ 'S', 'T', 'R', 'V', 'G', 0,
  /* 2037 */ 'L', 'A', 'X', 'G', 0,
  /* 2042 */ 'A', 'H', 0,
  /* 2045 */ 'L', 'B', 'H', 0,
  /* 2049 */ 'L', 'L', 'C', 'H', 0,
  /* 2054 */ 'S', 'T', 'C', 'H', 0,
  /* 2059 */ 'L', 'F', 'H', 0,
  /* 2063 */ 'S', 'T', 'F', 'H', 0,
  /* 2068 */ 'C', 'G', 'H', 0,
  /* 2072 */ 'L', 'L', 'G', 'H', 0,
  /* 2077 */ 'R', 'I', 'S', 'B', 'H', 'H', 0,
  /* 2084 */ 'I', 'I', 'H', 'H', 0,
  /* 2089 */ 'L', 'L', 'I', 'H', 'H', 0,
  /* 2095 */ 'N', 'I', 'H', 'H', 0,
  /* 2100 */ 'O', 'I', 'H', 'H', 0,
  /* 2105 */ 'L', 'L', 'H', 'H', 0,
  /* 2110 */ 'T', 'M', 'H', 'H', 0,
  /* 2115 */ 'S', 'T', 'H', 'H', 0,
  /* 2120 */ 'A', 'I', 'H', 0,
  /* 2124 */ 'C', 'I', 'H', 0,
  /* 2128 */ 'C', 'L', 'I', 'H', 0,
  /* 2133 */ 'R', 'I', 'S', 'B', 'L', 'H', 0,
  /* 2140 */ 'I', 'I', 'L', 'H', 0,
  /* 2145 */ 'L', 'L', 'I', 'L', 'H', 0,
  /* 2151 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'H', 0,
  /* 2168 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'N', 'I', 'L', 'H', 0,
  /* 2186 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'H', 0,
  /* 2203 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'O', 'I', 'L', 'H', 0,
  /* 2221 */ 'L', 'L', 'H', 0,
  /* 2225 */ 'T', 'M', 'L', 'H', 0,
  /* 2230 */ 'M', 'H', 0,
  /* 2233 */ 'S', 'H', 0,
  /* 2236 */ 'S', 'T', 'H', 0,
  /* 2240 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'I', 0,
  /* 2249 */ 'A', 's', 'm', 'J', 'E', 'C', 'I', 0,
  /* 2257 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'I', 0,
  /* 2266 */ 'A', 's', 'm', 'J', 'H', 'C', 'I', 0,
  /* 2274 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'I', 0,
  /* 2283 */ 'A', 's', 'm', 'J', 'L', 'C', 'I', 0,
  /* 2291 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'I', 0,
  /* 2303 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'I', 0,
  /* 2314 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'I', 0,
  /* 2326 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'I', 0,
  /* 2337 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'I', 0,
  /* 2349 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'I', 0,
  /* 2360 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'F', 'I', 0,
  /* 2376 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'A', 'F', 'I', 0,
  /* 2393 */ 'C', 'F', 'I', 0,
  /* 2397 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'G', 'F', 'I', 0,
  /* 2414 */ 'C', 'G', 'F', 'I', 0,
  /* 2419 */ 'A', 'L', 'G', 'F', 'I', 0,
  /* 2425 */ 'C', 'L', 'G', 'F', 'I', 0,
  /* 2431 */ 'S', 'L', 'G', 'F', 'I', 0,
  /* 2437 */ 'M', 'S', 'G', 'F', 'I', 0,
  /* 2443 */ 'A', 'L', 'F', 'I', 0,
  /* 2448 */ 'C', 'L', 'F', 'I', 0,
  /* 2453 */ 'S', 'L', 'F', 'I', 0,
  /* 2458 */ 'M', 'S', 'F', 'I', 0,
  /* 2463 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'G', 'I', 0,
  /* 2473 */ 'A', 's', 'm', 'J', 'E', 'C', 'G', 'I', 0,
  /* 2482 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'G', 'I', 0,
  /* 2492 */ 'A', 's', 'm', 'J', 'H', 'C', 'G', 'I', 0,
  /* 2501 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'G', 'I', 0,
  /* 2511 */ 'A', 's', 'm', 'J', 'L', 'C', 'G', 'I', 0,
  /* 2520 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 2533 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 2545 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 2558 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 2570 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 2583 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 2595 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'L', 'G', 'I', 0,
  /* 2606 */ 'A', 's', 'm', 'J', 'E', 'C', 'L', 'G', 'I', 0,
  /* 2616 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'L', 'G', 'I', 0,
  /* 2627 */ 'A', 's', 'm', 'J', 'H', 'C', 'L', 'G', 'I', 0,
  /* 2637 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'L', 'G', 'I', 0,
  /* 2648 */ 'A', 's', 'm', 'J', 'L', 'C', 'L', 'G', 'I', 0,
  /* 2658 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'L', 'G', 'I', 0,
  /* 2672 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'L', 'G', 'I', 0,
  /* 2685 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'L', 'G', 'I', 0,
  /* 2699 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'L', 'G', 'I', 0,
  /* 2712 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'L', 'G', 'I', 0,
  /* 2726 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'L', 'G', 'I', 0,
  /* 2739 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'H', 'I', 0,
  /* 2755 */ 'C', 'H', 'I', 0,
  /* 2759 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'G', 'H', 'I', 0,
  /* 2776 */ 'C', 'G', 'H', 'I', 0,
  /* 2781 */ 'L', 'G', 'H', 'I', 0,
  /* 2786 */ 'M', 'G', 'H', 'I', 0,
  /* 2791 */ 'M', 'V', 'G', 'H', 'I', 0,
  /* 2797 */ 'M', 'V', 'H', 'H', 'I', 0,
  /* 2803 */ 'L', 'H', 'I', 0,
  /* 2807 */ 'M', 'H', 'I', 0,
  /* 2811 */ 'P', 'H', 'I', 0,
  /* 2815 */ 'M', 'V', 'H', 'I', 0,
  /* 2820 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'L', 'I', 0,
  /* 2830 */ 'A', 's', 'm', 'J', 'E', 'C', 'L', 'I', 0,
  /* 2839 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'L', 'I', 0,
  /* 2849 */ 'A', 's', 'm', 'J', 'H', 'C', 'L', 'I', 0,
  /* 2858 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'L', 'I', 0,
  /* 2868 */ 'A', 's', 'm', 'J', 'L', 'C', 'L', 'I', 0,
  /* 2877 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'L', 'I', 0,
  /* 2890 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'L', 'I', 0,
  /* 2902 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'L', 'I', 0,
  /* 2915 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'L', 'I', 0,
  /* 2927 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'L', 'I', 0,
  /* 2940 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'L', 'I', 0,
  /* 2952 */ 'N', 'I', 0,
  /* 2955 */ 'O', 'I', 0,
  /* 2958 */ 'A', 'S', 'I', 0,
  /* 2962 */ 'A', 'G', 'S', 'I', 0,
  /* 2967 */ 'C', 'H', 'S', 'I', 0,
  /* 2972 */ 'C', 'L', 'F', 'H', 'S', 'I', 0,
  /* 2979 */ 'C', 'G', 'H', 'S', 'I', 0,
  /* 2985 */ 'C', 'L', 'G', 'H', 'S', 'I', 0,
  /* 2992 */ 'C', 'H', 'H', 'S', 'I', 0,
  /* 2998 */ 'C', 'L', 'H', 'H', 'S', 'I', 0,
  /* 3005 */ 'M', 'V', 'I', 0,
  /* 3009 */ 'X', 'I', 0,
  /* 3012 */ 'A', 's', 'm', 'N', 'H', 'E', 'J', 0,
  /* 3020 */ 'A', 's', 'm', 'H', 'E', 'J', 0,
  /* 3027 */ 'A', 's', 'm', 'N', 'L', 'E', 'J', 0,
  /* 3035 */ 'A', 's', 'm', 'L', 'E', 'J', 0,
  /* 3042 */ 'A', 's', 'm', 'N', 'E', 'J', 0,
  /* 3049 */ 'A', 's', 'm', 'E', 'J', 0,
  /* 3055 */ 'A', 's', 'm', 'N', 'L', 'H', 'J', 0,
  /* 3063 */ 'A', 's', 'm', 'L', 'H', 'J', 0,
  /* 3070 */ 'A', 's', 'm', 'N', 'H', 'J', 0,
  /* 3077 */ 'A', 's', 'm', 'H', 'J', 0,
  /* 3083 */ 'A', 's', 'm', 'C', 'I', 'J', 0,
  /* 3090 */ 'A', 's', 'm', 'C', 'G', 'I', 'J', 0,
  /* 3098 */ 'A', 's', 'm', 'C', 'L', 'G', 'I', 'J', 0,
  /* 3107 */ 'A', 's', 'm', 'C', 'L', 'I', 'J', 0,
  /* 3115 */ 'A', 's', 'm', 'N', 'L', 'J', 0,
  /* 3122 */ 'A', 's', 'm', 'L', 'J', 0,
  /* 3128 */ 'A', 's', 'm', 'N', 'O', 'J', 0,
  /* 3135 */ 'A', 's', 'm', 'O', 'J', 0,
  /* 3141 */ 'A', 's', 'm', 'C', 'R', 'J', 0,
  /* 3148 */ 'A', 's', 'm', 'C', 'G', 'R', 'J', 0,
  /* 3156 */ 'A', 's', 'm', 'C', 'L', 'G', 'R', 'J', 0,
  /* 3165 */ 'A', 's', 'm', 'C', 'L', 'R', 'J', 0,
  /* 3173 */ 'S', 'R', 'A', 'K', 0,
  /* 3178 */ 'A', 'H', 'I', 'K', 0,
  /* 3183 */ 'A', 'G', 'H', 'I', 'K', 0,
  /* 3189 */ 'A', 'L', 'G', 'H', 'S', 'I', 'K', 0,
  /* 3197 */ 'A', 'L', 'H', 'S', 'I', 'K', 0,
  /* 3204 */ 'S', 'L', 'L', 'K', 0,
  /* 3209 */ 'S', 'R', 'L', 'K', 0,
  /* 3214 */ 'A', 'R', 'K', 0,
  /* 3218 */ 'A', 'G', 'R', 'K', 0,
  /* 3223 */ 'A', 'L', 'G', 'R', 'K', 0,
  /* 3229 */ 'S', 'L', 'G', 'R', 'K', 0,
  /* 3235 */ 'N', 'G', 'R', 'K', 0,
  /* 3240 */ 'O', 'G', 'R', 'K', 0,
  /* 3245 */ 'S', 'G', 'R', 'K', 0,
  /* 3250 */ 'X', 'G', 'R', 'K', 0,
  /* 3255 */ 'A', 'L', 'R', 'K', 0,
  /* 3260 */ 'S', 'L', 'R', 'K', 0,
  /* 3265 */ 'N', 'R', 'K', 0,
  /* 3269 */ 'O', 'R', 'K', 0,
  /* 3273 */ 'S', 'R', 'K', 0,
  /* 3277 */ 'X', 'R', 'K', 0,
  /* 3281 */ 'A', 'H', 'I', 'M', 'u', 'x', 'K', 0,
  /* 3289 */ 'L', 'A', 'A', 'L', 0,
  /* 3294 */ 'A', 's', 'm', 'B', 'R', 'C', 'L', 0,
  /* 3302 */ 'D', 'L', 0,
  /* 3305 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 3314 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 3323 */ 'R', 'I', 'S', 'B', 'H', 'L', 0,
  /* 3330 */ 'I', 'I', 'H', 'L', 0,
  /* 3335 */ 'L', 'L', 'I', 'H', 'L', 0,
  /* 3341 */ 'N', 'I', 'H', 'L', 0,
  /* 3346 */ 'O', 'I', 'H', 'L', 0,
  /* 3351 */ 'T', 'M', 'H', 'L', 0,
  /* 3356 */ 'R', 'I', 'S', 'B', 'L', 'L', 0,
  /* 3363 */ 'I', 'I', 'L', 'L', 0,
  /* 3368 */ 'K', 'I', 'L', 'L', 0,
  /* 3373 */ 'L', 'L', 'I', 'L', 'L', 0,
  /* 3379 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'L', 0,
  /* 3396 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'L', 0,
  /* 3413 */ 'T', 'M', 'L', 'L', 0,
  /* 3418 */ 'R', 'L', 'L', 0,
  /* 3422 */ 'S', 'L', 'L', 0,
  /* 3426 */ 'L', 'A', 'R', 'L', 0,
  /* 3431 */ 'C', 'R', 'L', 0,
  /* 3435 */ 'P', 'F', 'D', 'R', 'L', 0,
  /* 3441 */ 'C', 'G', 'F', 'R', 'L', 0,
  /* 3447 */ 'C', 'L', 'G', 'F', 'R', 'L', 0,
  /* 3454 */ 'L', 'L', 'G', 'F', 'R', 'L', 0,
  /* 3461 */ 'C', 'G', 'R', 'L', 0,
  /* 3466 */ 'C', 'L', 'G', 'R', 'L', 0,
  /* 3472 */ 'S', 'T', 'G', 'R', 'L', 0,
  /* 3478 */ 'C', 'H', 'R', 'L', 0,
  /* 3483 */ 'C', 'G', 'H', 'R', 'L', 0,
  /* 3489 */ 'C', 'L', 'G', 'H', 'R', 'L', 0,
  /* 3496 */ 'L', 'L', 'G', 'H', 'R', 'L', 0,
  /* 3503 */ 'C', 'L', 'H', 'R', 'L', 0,
  /* 3509 */ 'L', 'L', 'H', 'R', 'L', 0,
  /* 3515 */ 'S', 'T', 'H', 'R', 'L', 0,
  /* 3521 */ 'C', 'L', 'R', 'L', 0,
  /* 3526 */ 'S', 'R', 'L', 0,
  /* 3530 */ 'S', 'T', 'R', 'L', 0,
  /* 3535 */ 'C', 'a', 'l', 'l', 'B', 'R', 'A', 'S', 'L', 0,
  /* 3545 */ 'I', 'P', 'M', 0,
  /* 3549 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 3559 */ 'T', 'M', 0,
  /* 3562 */ 'L', 'A', 'N', 0,
  /* 3566 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'U', 'M', 'I', 'N', 0,
  /* 3584 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'M', 'I', 'N', 0,
  /* 3601 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 3617 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 3634 */ 'L', 'A', 'O', 0,
  /* 3638 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 3647 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 3662 */ 'E', 'A', 'R', 0,
  /* 3666 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'R', 0,
  /* 3681 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'A', 'R', 0,
  /* 3697 */ 'M', 'A', 'D', 'B', 'R', 0,
  /* 3703 */ 'L', 'C', 'D', 'B', 'R', 0,
  /* 3709 */ 'D', 'D', 'B', 'R', 0,
  /* 3714 */ 'L', 'E', 'D', 'B', 'R', 0,
  /* 3720 */ 'C', 'F', 'D', 'B', 'R', 0,
  /* 3726 */ 'C', 'L', 'F', 'D', 'B', 'R', 0,
  /* 3733 */ 'C', 'G', 'D', 'B', 'R', 0,
  /* 3739 */ 'C', 'L', 'G', 'D', 'B', 'R', 0,
  /* 3746 */ 'F', 'I', 'D', 'B', 'R', 0,
  /* 3752 */ 'M', 'D', 'B', 'R', 0,
  /* 3757 */ 'L', 'N', 'D', 'B', 'R', 0,
  /* 3763 */ 'L', 'P', 'D', 'B', 'R', 0,
  /* 3769 */ 'S', 'Q', 'D', 'B', 'R', 0,
  /* 3775 */ 'M', 'S', 'D', 'B', 'R', 0,
  /* 3781 */ 'L', 'T', 'D', 'B', 'R', 0,
  /* 3787 */ 'L', 'X', 'D', 'B', 'R', 0,
  /* 3793 */ 'M', 'X', 'D', 'B', 'R', 0,
  /* 3799 */ 'M', 'A', 'E', 'B', 'R', 0,
  /* 3805 */ 'L', 'C', 'E', 'B', 'R', 0,
  /* 3811 */ 'L', 'D', 'E', 'B', 'R', 0,
  /* 3817 */ 'M', 'D', 'E', 'B', 'R', 0,
  /* 3823 */ 'M', 'E', 'E', 'B', 'R', 0,
  /* 3829 */ 'C', 'F', 'E', 'B', 'R', 0,
  /* 3835 */ 'C', 'L', 'F', 'E', 'B', 'R', 0,
  /* 3842 */ 'C', 'G', 'E', 'B', 'R', 0,
  /* 3848 */ 'C', 'L', 'G', 'E', 'B', 'R', 0,
  /* 3855 */ 'A', 's', 'm', 'N', 'H', 'E', 'B', 'R', 0,
  /* 3864 */ 'A', 's', 'm', 'H', 'E', 'B', 'R', 0,
  /* 3872 */ 'F', 'I', 'E', 'B', 'R', 0,
  /* 3878 */ 'A', 's', 'm', 'N', 'L', 'E', 'B', 'R', 0,
  /* 3887 */ 'A', 's', 'm', 'L', 'E', 'B', 'R', 0,
  /* 3895 */ 'L', 'N', 'E', 'B', 'R', 0,
  /* 3901 */ 'A', 's', 'm', 'N', 'E', 'B', 'R', 0,
  /* 3909 */ 'L', 'P', 'E', 'B', 'R', 0,
  /* 3915 */ 'S', 'Q', 'E', 'B', 'R', 0,
  /* 3921 */ 'M', 'S', 'E', 'B', 'R', 0,
  /* 3927 */ 'L', 'T', 'E', 'B', 'R', 0,
  /* 3933 */ 'L', 'X', 'E', 'B', 'R', 0,
  /* 3939 */ 'A', 's', 'm', 'E', 'B', 'R', 0,
  /* 3946 */ 'C', 'D', 'F', 'B', 'R', 0,
  /* 3952 */ 'C', 'E', 'F', 'B', 'R', 0,
  /* 3958 */ 'C', 'D', 'L', 'F', 'B', 'R', 0,
  /* 3965 */ 'C', 'E', 'L', 'F', 'B', 'R', 0,
  /* 3972 */ 'C', 'X', 'L', 'F', 'B', 'R', 0,
  /* 3979 */ 'C', 'X', 'F', 'B', 'R', 0,
  /* 3985 */ 'C', 'D', 'G', 'B', 'R', 0,
  /* 3991 */ 'C', 'E', 'G', 'B', 'R', 0,
  /* 3997 */ 'C', 'D', 'L', 'G', 'B', 'R', 0,
  /* 4004 */ 'C', 'E', 'L', 'G', 'B', 'R', 0,
  /* 4011 */ 'S', 'L', 'G', 'B', 'R', 0,
  /* 4017 */ 'C', 'X', 'L', 'G', 'B', 'R', 0,
  /* 4024 */ 'C', 'X', 'G', 'B', 'R', 0,
  /* 4030 */ 'A', 's', 'm', 'N', 'L', 'H', 'B', 'R', 0,
  /* 4039 */ 'A', 's', 'm', 'L', 'H', 'B', 'R', 0,
  /* 4047 */ 'A', 's', 'm', 'N', 'H', 'B', 'R', 0,
  /* 4055 */ 'A', 's', 'm', 'H', 'B', 'R', 0,
  /* 4062 */ 'A', 's', 'm', 'N', 'L', 'B', 'R', 0,
  /* 4070 */ 'S', 'L', 'B', 'R', 0,
  /* 4075 */ 'A', 's', 'm', 'L', 'B', 'R', 0,
  /* 4082 */ 'A', 's', 'm', 'N', 'O', 'B', 'R', 0,
  /* 4090 */ 'A', 's', 'm', 'O', 'B', 'R', 0,
  /* 4097 */ 'A', 'X', 'B', 'R', 0,
  /* 4102 */ 'L', 'C', 'X', 'B', 'R', 0,
  /* 4108 */ 'L', 'D', 'X', 'B', 'R', 0,
  /* 4114 */ 'L', 'E', 'X', 'B', 'R', 0,
  /* 4120 */ 'C', 'F', 'X', 'B', 'R', 0,
  /* 4126 */ 'C', 'L', 'F', 'X', 'B', 'R', 0,
  /* 4133 */ 'C', 'G', 'X', 'B', 'R', 0,
  /* 4139 */ 'C', 'L', 'G', 'X', 'B', 'R', 0,
  /* 4146 */ 'F', 'I', 'X', 'B', 'R', 0,
  /* 4152 */ 'M', 'X', 'B', 'R', 0,
  /* 4157 */ 'L', 'N', 'X', 'B', 'R', 0,
  /* 4163 */ 'L', 'P', 'X', 'B', 'R', 0,
  /* 4169 */ 'S', 'Q', 'X', 'B', 'R', 0,
  /* 4175 */ 'S', 'X', 'B', 'R', 0,
  /* 4180 */ 'L', 'T', 'X', 'B', 'R', 0,
  /* 4186 */ 'C', 'a', 'l', 'l', 'B', 'R', 0,
  /* 4193 */ 'A', 's', 'm', 'B', 'C', 'R', 0,
  /* 4200 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'R', 0,
  /* 4209 */ 'A', 's', 'm', 'J', 'E', 'C', 'R', 0,
  /* 4217 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'R', 0,
  /* 4226 */ 'L', 'L', 'G', 'C', 'R', 0,
  /* 4232 */ 'A', 's', 'm', 'J', 'H', 'C', 'R', 0,
  /* 4240 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'R', 0,
  /* 4249 */ 'A', 'L', 'C', 'R', 0,
  /* 4254 */ 'A', 's', 'm', 'J', 'L', 'C', 'R', 0,
  /* 4262 */ 'L', 'L', 'C', 'R', 0,
  /* 4267 */ 'A', 's', 'm', 'N', 'H', 'E', 'L', 'O', 'C', 'R', 0,
  /* 4278 */ 'A', 's', 'm', 'H', 'E', 'L', 'O', 'C', 'R', 0,
  /* 4288 */ 'A', 's', 'm', 'N', 'L', 'E', 'L', 'O', 'C', 'R', 0,
  /* 4299 */ 'A', 's', 'm', 'L', 'E', 'L', 'O', 'C', 'R', 0,
  /* 4309 */ 'A', 's', 'm', 'N', 'E', 'L', 'O', 'C', 'R', 0,
  /* 4319 */ 'A', 's', 'm', 'E', 'L', 'O', 'C', 'R', 0,
  /* 4328 */ 'A', 's', 'm', 'N', 'L', 'H', 'L', 'O', 'C', 'R', 0,
  /* 4339 */ 'A', 's', 'm', 'L', 'H', 'L', 'O', 'C', 'R', 0,
  /* 4349 */ 'A', 's', 'm', 'N', 'H', 'L', 'O', 'C', 'R', 0,
  /* 4359 */ 'A', 's', 'm', 'H', 'L', 'O', 'C', 'R', 0,
  /* 4368 */ 'A', 's', 'm', 'N', 'L', 'L', 'O', 'C', 'R', 0,
  /* 4378 */ 'A', 's', 'm', 'L', 'L', 'O', 'C', 'R', 0,
  /* 4387 */ 'A', 's', 'm', 'N', 'O', 'L', 'O', 'C', 'R', 0,
  /* 4397 */ 'A', 's', 'm', 'O', 'L', 'O', 'C', 'R', 0,
  /* 4406 */ 'A', 's', 'm', 'L', 'O', 'C', 'R', 0,
  /* 4414 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'R', 0,
  /* 4426 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'R', 0,
  /* 4437 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'R', 0,
  /* 4449 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'R', 0,
  /* 4460 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'R', 0,
  /* 4472 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'R', 0,
  /* 4483 */ 'L', 'G', 'D', 'R', 0,
  /* 4488 */ 'L', 'D', 'R', 0,
  /* 4492 */ 'L', 'Z', 'D', 'R', 0,
  /* 4497 */ 'L', 'E', 'R', 0,
  /* 4501 */ 'L', 'Z', 'E', 'R', 0,
  /* 4506 */ 'A', 'G', 'F', 'R', 0,
  /* 4511 */ 'L', 'C', 'G', 'F', 'R', 0,
  /* 4517 */ 'A', 'L', 'G', 'F', 'R', 0,
  /* 4523 */ 'C', 'L', 'G', 'F', 'R', 0,
  /* 4529 */ 'L', 'L', 'G', 'F', 'R', 0,
  /* 4535 */ 'S', 'L', 'G', 'F', 'R', 0,
  /* 4541 */ 'L', 'N', 'G', 'F', 'R', 0,
  /* 4547 */ 'L', 'P', 'G', 'F', 'R', 0,
  /* 4553 */ 'D', 'S', 'G', 'F', 'R', 0,
  /* 4559 */ 'M', 'S', 'G', 'F', 'R', 0,
  /* 4565 */ 'L', 'T', 'G', 'F', 'R', 0,
  /* 4571 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'G', 'R', 0,
  /* 4587 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'G', 'R', 0,
  /* 4597 */ 'A', 's', 'm', 'J', 'E', 'C', 'G', 'R', 0,
  /* 4606 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'G', 'R', 0,
  /* 4616 */ 'A', 's', 'm', 'J', 'H', 'C', 'G', 'R', 0,
  /* 4625 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'G', 'R', 0,
  /* 4635 */ 'A', 'L', 'C', 'G', 'R', 0,
  /* 4641 */ 'A', 's', 'm', 'J', 'L', 'C', 'G', 'R', 0,
  /* 4650 */ 'A', 's', 'm', 'N', 'H', 'E', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4662 */ 'A', 's', 'm', 'H', 'E', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4673 */ 'A', 's', 'm', 'N', 'L', 'E', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4685 */ 'A', 's', 'm', 'L', 'E', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4696 */ 'A', 's', 'm', 'N', 'E', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4707 */ 'A', 's', 'm', 'E', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4717 */ 'A', 's', 'm', 'N', 'L', 'H', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4729 */ 'A', 's', 'm', 'L', 'H', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4740 */ 'A', 's', 'm', 'N', 'H', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4751 */ 'A', 's', 'm', 'H', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4761 */ 'A', 's', 'm', 'N', 'L', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4772 */ 'A', 's', 'm', 'L', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4782 */ 'A', 's', 'm', 'N', 'O', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4793 */ 'A', 's', 'm', 'O', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4803 */ 'A', 's', 'm', 'L', 'O', 'C', 'G', 'R', 0,
  /* 4812 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 4825 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 4837 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 4850 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 4862 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 4875 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 4887 */ 'L', 'D', 'G', 'R', 0,
  /* 4892 */ 'A', 'L', 'G', 'R', 0,
  /* 4897 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'L', 'G', 'R', 0,
  /* 4908 */ 'A', 's', 'm', 'J', 'E', 'C', 'L', 'G', 'R', 0,
  /* 4918 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'L', 'G', 'R', 0,
  /* 4929 */ 'A', 's', 'm', 'J', 'H', 'C', 'L', 'G', 'R', 0,
  /* 4939 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'L', 'G', 'R', 0,
  /* 4950 */ 'A', 's', 'm', 'J', 'L', 'C', 'L', 'G', 'R', 0,
  /* 4960 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'L', 'G', 'R', 0,
  /* 4974 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'L', 'G', 'R', 0,
  /* 4987 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'L', 'G', 'R', 0,
  /* 5001 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'L', 'G', 'R', 0,
  /* 5014 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'L', 'G', 'R', 0,
  /* 5028 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'L', 'G', 'R', 0,
  /* 5041 */ 'D', 'L', 'G', 'R', 0,
  /* 5046 */ 'M', 'L', 'G', 'R', 0,
  /* 5051 */ 'S', 'L', 'G', 'R', 0,
  /* 5056 */ 'L', 'N', 'G', 'R', 0,
  /* 5061 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'G', 'R', 0,
  /* 5077 */ 'F', 'L', 'O', 'G', 'R', 0,
  /* 5083 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'G', 'R', 0,
  /* 5099 */ 'L', 'P', 'G', 'R', 0,
  /* 5104 */ 'D', 'S', 'G', 'R', 0,
  /* 5109 */ 'M', 'S', 'G', 'R', 0,
  /* 5114 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'G', 'R', 0,
  /* 5130 */ 'L', 'T', 'G', 'R', 0,
  /* 5135 */ 'L', 'R', 'V', 'G', 'R', 0,
  /* 5141 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'G', 'R', 0,
  /* 5157 */ 'L', 'L', 'G', 'H', 'R', 0,
  /* 5163 */ 'L', 'L', 'H', 'R', 0,
  /* 5168 */ 'A', 'L', 'R', 0,
  /* 5172 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'L', 'R', 0,
  /* 5182 */ 'A', 's', 'm', 'J', 'E', 'C', 'L', 'R', 0,
  /* 5191 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'L', 'R', 0,
  /* 5201 */ 'A', 's', 'm', 'J', 'H', 'C', 'L', 'R', 0,
  /* 5210 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'L', 'R', 0,
  /* 5220 */ 'A', 's', 'm', 'J', 'L', 'C', 'L', 'R', 0,
  /* 5229 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'L', 'R', 0,
  /* 5242 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'L', 'R', 0,
  /* 5254 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'L', 'R', 0,
  /* 5267 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'L', 'R', 0,
  /* 5279 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'L', 'R', 0,
  /* 5292 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'L', 'R', 0,
  /* 5304 */ 'D', 'L', 'R', 0,
  /* 5308 */ 'S', 'L', 'R', 0,
  /* 5312 */ 'L', 'N', 'R', 0,
  /* 5316 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'R', 0,
  /* 5331 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'N', 'R', 0,
  /* 5347 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', 0,
  /* 5362 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'O', 'R', 0,
  /* 5378 */ 'L', 'P', 'R', 0,
  /* 5382 */ 'C', 'a', 'l', 'l', 'B', 'A', 'S', 'R', 0,
  /* 5391 */ 'M', 'S', 'R', 0,
  /* 5395 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'R', 0,
  /* 5410 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'S', 'R', 0,
  /* 5426 */ 'L', 'T', 'R', 0,
  /* 5430 */ 'L', 'R', 'V', 'R', 0,
  /* 5435 */ 'L', 'X', 'R', 0,
  /* 5439 */ 'L', 'Z', 'X', 'R', 0,
  /* 5444 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'R', 0,
  /* 5459 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'X', 'R', 0,
  /* 5475 */ 'B', 'R', 'A', 'S', 0,
  /* 5480 */ 'C', 'S', 0,
  /* 5483 */ 'M', 'S', 0,
  /* 5486 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 5503 */ 'B', 'R', 'C', 'T', 0,
  /* 5508 */ 'L', 'T', 0,
  /* 5511 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 5522 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 5537 */ 'C', 'L', 'S', 'T', 0,
  /* 5542 */ 'S', 'R', 'S', 'T', 0,
  /* 5547 */ 'M', 'V', 'S', 'T', 0,
  /* 5552 */ 'L', 'R', 'V', 0,
  /* 5556 */ 'S', 'T', 'R', 'V', 0,
  /* 5561 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', 'W', 0,
  /* 5574 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', 'W', 0,
  /* 5591 */ 'L', 'A', 'X', 0,
  /* 5595 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'U', 'M', 'A', 'X', 0,
  /* 5613 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'M', 'A', 'X', 0,
  /* 5630 */ 'L', 'X', 0,
  /* 5633 */ 'S', 'T', 'X', 0,
  /* 5637 */ 'I', 'C', '3', '2', 'Y', 0,
  /* 5643 */ 'L', 'A', 'Y', 0,
  /* 5647 */ 'I', 'C', 'Y', 0,
  /* 5651 */ 'S', 'T', 'C', 'Y', 0,
  /* 5656 */ 'L', 'D', 'Y', 0,
  /* 5660 */ 'S', 'T', 'D', 'Y', 0,
  /* 5665 */ 'L', 'E', 'Y', 0,
  /* 5669 */ 'S', 'T', 'E', 'Y', 0,
  /* 5674 */ 'A', 'H', 'Y', 0,
  /* 5678 */ 'C', 'H', 'Y', 0,
  /* 5682 */ 'L', 'H', 'Y', 0,
  /* 5686 */ 'M', 'H', 'Y', 0,
  /* 5690 */ 'S', 'H', 'Y', 0,
  /* 5694 */ 'S', 'T', 'H', 'Y', 0,
  /* 5699 */ 'C', 'L', 'I', 'Y', 0,
  /* 5704 */ 'N', 'I', 'Y', 0,
  /* 5708 */ 'O', 'I', 'Y', 0,
  /* 5712 */ 'M', 'V', 'I', 'Y', 0,
  /* 5717 */ 'X', 'I', 'Y', 0,
  /* 5721 */ 'A', 'L', 'Y', 0,
  /* 5725 */ 'C', 'L', 'Y', 0,
  /* 5729 */ 'S', 'L', 'Y', 0,
  /* 5733 */ 'T', 'M', 'Y', 0,
  /* 5737 */ 'N', 'Y', 0,
  /* 5740 */ 'O', 'Y', 0,
  /* 5743 */ 'C', 'O', 'P', 'Y', 0,
  /* 5748 */ 'C', 'S', 'Y', 0,
  /* 5752 */ 'M', 'S', 'Y', 0,
  /* 5756 */ 'S', 'T', 'Y', 0,
  /* 5760 */ 'X', 'Y', 0,
  /* 5763 */ 'C', 'P', 'S', 'D', 'R', 'd', 'd', 0,
  /* 5771 */ 'C', 'P', 'S', 'D', 'R', 's', 'd', 0,
  /* 5779 */ 'C', 'L', 'C', 'S', 'e', 'q', 'u', 'e', 'n', 'c', 'e', 0,
  /* 5791 */ 'N', 'C', 'S', 'e', 'q', 'u', 'e', 'n', 'c', 'e', 0,
  /* 5802 */ 'O', 'C', 'S', 'e', 'q', 'u', 'e', 'n', 'c', 'e', 0,
  /* 5813 */ 'M', 'V', 'C', 'S', 'e', 'q', 'u', 'e', 'n', 'c', 'e', 0,
  /* 5825 */ 'X', 'C', 'S', 'e', 'q', 'u', 'e', 'n', 'c', 'e', 0,
  /* 5836 */ 'L', 'T', 'D', 'B', 'R', 'C', 'o', 'm', 'p', 'a', 'r', 'e', 0,
  /* 5849 */ 'L', 'T', 'E', 'B', 'R', 'C', 'o', 'm', 'p', 'a', 'r', 'e', 0,
  /* 5862 */ 'L', 'T', 'X', 'B', 'R', 'C', 'o', 'm', 'p', 'a', 'r', 'e', 0,
  /* 5875 */ 'S', 'e', 'r', 'i', 'a', 'l', 'i', 'z', 'e', 0,
  /* 5885 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'F', '6', '4', 'i', 0,
  /* 5905 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'F', '6', '4', 'i', 0,
  /* 5925 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'H', '6', '4', 'i', 0,
  /* 5945 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'H', '6', '4', 'i', 0,
  /* 5965 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'L', '6', '4', 'i', 0,
  /* 5985 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'L', '6', '4', 'i', 0,
  /* 6005 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'F', 'i', 0,
  /* 6023 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'H', 'i', 0,
  /* 6041 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'N', 'I', 'L', 'H', 'i', 0,
  /* 6060 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'L', 'i', 0,
  /* 6078 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'G', 'R', 'i', 0,
  /* 6095 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'R', 'i', 0,
  /* 6111 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'N', 'R', 'i', 0,
  /* 6128 */ 'R', 'e', 't', 'u', 'r', 'n', 0,
  /* 6135 */ 'C', 'L', 'C', 'L', 'o', 'o', 'p', 0,
  /* 6143 */ 'N', 'C', 'L', 'o', 'o', 'p', 0,
  /* 6150 */ 'O', 'C', 'L', 'o', 'o', 'p', 0,
  /* 6157 */ 'M', 'V', 'C', 'L', 'o', 'o', 'p', 0,
  /* 6165 */ 'X', 'C', 'L', 'o', 'o', 'p', 0,
  /* 6172 */ 'C', 'L', 'S', 'T', 'L', 'o', 'o', 'p', 0,
  /* 6181 */ 'S', 'R', 'S', 'T', 'L', 'o', 'o', 'p', 0,
  /* 6190 */ 'M', 'V', 'S', 'T', 'L', 'o', 'o', 'p', 0,
  /* 6199 */ 'C', 'P', 'S', 'D', 'R', 'd', 's', 0,
  /* 6207 */ 'C', 'P', 'S', 'D', 'R', 's', 's', 0,
  /* 6215 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', 'F', '3', '2', 'I', 'n', 'v', 0,
  /* 6231 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '3', '2', 'I', 'n', 'v', 0,
  /* 6246 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', 'F', '6', '4', 'I', 'n', 'v', 0,
  /* 6262 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '6', '4', 'I', 'n', 'v', 0,
  /* 6277 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '1', '6', 'I', 'n', 'v', 0,
  /* 6292 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '8', 'I', 'n', 'v', 0,
  /* 6306 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '1', '6', 'M', 'u', 'x', 'I', 'n', 'v', 0,
  /* 6324 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '8', 'M', 'u', 'x', 'I', 'n', 'v', 0,
  /* 6341 */ 'S', 'e', 'l', 'e', 'c', 't', '3', '2', 'M', 'u', 'x', 0,
  /* 6353 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '1', '6', 'M', 'u', 'x', 0,
  /* 6368 */ 'C', 'o', 'n', 'd', 'S', 't', 'o', 'r', 'e', '8', 'M', 'u', 'x', 0,
  /* 6382 */ 'L', 'B', 'M', 'u', 'x', 0,
  /* 6388 */ 'R', 'I', 'S', 'B', 'M', 'u', 'x', 0,
  /* 6396 */ 'L', 'L', 'C', 'M', 'u', 'x', 0,
  /* 6403 */ 'S', 'T', 'C', 'M', 'u', 'x', 0,
  /* 6410 */ 'I', 'I', 'F', 'M', 'u', 'x', 0,
  /* 6417 */ 'N', 'I', 'F', 'M', 'u', 'x', 0,
  /* 6424 */ 'O', 'I', 'F', 'M', 'u', 'x', 0,
  /* 6431 */ 'X', 'I', 'F', 'M', 'u', 'x', 0,
  /* 6438 */ 'I', 'I', 'H', 'M', 'u', 'x', 0,
  /* 6445 */ 'N', 'I', 'H', 'M', 'u', 'x', 0,
  /* 6452 */ 'O', 'I', 'H', 'M', 'u', 'x', 0,
  /* 6459 */ 'L', 'L', 'H', 'M', 'u', 'x', 0,
  /* 6466 */ 'T', 'M', 'H', 'M', 'u', 'x', 0,
  /* 6473 */ 'S', 'T', 'H', 'M', 'u', 'x', 0,
  /* 6480 */ 'A', 'F', 'I', 'M', 'u', 'x', 0,
  /* 6487 */ 'C', 'F', 'I', 'M', 'u', 'x', 0,
  /* 6494 */ 'C', 'L', 'F', 'I', 'M', 'u', 'x', 0,
  /* 6502 */ 'A', 'H', 'I', 'M', 'u', 'x', 0,
  /* 6509 */ 'L', 'H', 'I', 'M', 'u', 'x', 0,
  /* 6516 */ 'C', 'L', 'M', 'u', 'x', 0,
  /* 6522 */ 'I', 'I', 'L', 'M', 'u', 'x', 0,
  /* 6529 */ 'N', 'I', 'L', 'M', 'u', 'x', 0,
  /* 6536 */ 'O', 'I', 'L', 'M', 'u', 'x', 0,
  /* 6543 */ 'T', 'M', 'L', 'M', 'u', 'x', 0,
  /* 6550 */ 'L', 'L', 'C', 'R', 'M', 'u', 'x', 0,
  /* 6558 */ 'L', 'L', 'H', 'R', 'M', 'u', 'x', 0,
  /* 6566 */ 'L', 'R', 'M', 'u', 'x', 0,
  /* 6572 */ 'S', 'T', 'M', 'u', 'x', 0,
};

extern const unsigned SystemZInstrNameIndices[] = {
    2811U, 3549U, 3601U, 3314U, 3305U, 3368U, 1769U, 1784U, 
    1245U, 1798U, 5486U, 1235U, 1211U, 5743U, 1224U, 5522U, 
    1177U, 3638U, 5511U, 1190U, 703U, 755U, 3698U, 3617U, 
    3647U, 952U, 792U, 3800U, 520U, 2372U, 6480U, 1418U, 
    1258U, 2409U, 4506U, 2771U, 3183U, 4583U, 3218U, 2962U, 
    2042U, 2751U, 3178U, 6502U, 3281U, 5674U, 2120U, 3291U, 
    846U, 1455U, 4635U, 4249U, 2443U, 1939U, 1266U, 2419U, 
    4517U, 3189U, 4892U, 3223U, 3197U, 5168U, 3255U, 5721U, 
    3663U, 3214U, 2958U, 5574U, 2376U, 3681U, 5613U, 3584U, 
    2168U, 6041U, 5331U, 6111U, 2203U, 5362U, 5410U, 5595U, 
    3566U, 1398U, 5459U, 2360U, 2397U, 2759U, 4571U, 2739U, 
    3666U, 121U, 616U, 67U, 562U, 5061U, 6078U, 168U, 
    5885U, 319U, 5925U, 423U, 5965U, 1347U, 232U, 5905U, 
    6005U, 2151U, 371U, 5945U, 6023U, 3379U, 475U, 5985U, 
    6060U, 5316U, 6095U, 5083U, 187U, 338U, 442U, 1364U, 
    251U, 2186U, 390U, 3396U, 494U, 5347U, 5114U, 5395U, 
    101U, 596U, 47U, 542U, 5141U, 206U, 1381U, 270U, 
    5444U, 5561U, 86U, 581U, 4097U, 5644U, 4193U, 1152U, 
    3294U, 3090U, 3148U, 3083U, 3098U, 3156U, 3107U, 3165U, 
    3141U, 3939U, 3049U, 1861U, 908U, 1512U, 4707U, 4319U, 
    1057U, 1664U, 4055U, 3864U, 3020U, 1828U, 871U, 1471U, 
    4662U, 4278U, 1016U, 1619U, 3077U, 1893U, 944U, 1552U, 
    4751U, 4359U, 1097U, 1708U, 2533U, 4825U, 2303U, 2672U, 
    4974U, 2890U, 5242U, 4426U, 2473U, 4597U, 2249U, 2606U, 
    4908U, 2830U, 5182U, 4209U, 2558U, 4850U, 2326U, 2699U, 
    5001U, 2915U, 5267U, 4449U, 2492U, 4616U, 2266U, 2627U, 
    4929U, 2849U, 5201U, 4232U, 2520U, 4812U, 2291U, 2658U, 
    4960U, 2877U, 5229U, 4414U, 2463U, 4587U, 2240U, 2595U, 
    4897U, 2820U, 5172U, 4200U, 2583U, 4875U, 2349U, 2726U, 
    5028U, 2940U, 5292U, 4472U, 2511U, 4641U, 2283U, 2648U, 
    4950U, 2868U, 5220U, 4254U, 2545U, 4837U, 2314U, 2685U, 
    4987U, 2902U, 5254U, 4437U, 2482U, 4606U, 2257U, 2616U, 
    4918U, 2839U, 5191U, 4217U, 2570U, 4862U, 2337U, 2712U, 
    5014U, 2927U, 5279U, 4460U, 2501U, 4625U, 2274U, 2637U, 
    4939U, 2858U, 5210U, 4240U, 4075U, 3887U, 3035U, 1845U, 
    890U, 1492U, 4685U, 4299U, 1037U, 1642U, 4039U, 3063U, 
    1877U, 926U, 1532U, 4729U, 4339U, 1077U, 1686U, 3122U, 
    1908U, 973U, 1571U, 4772U, 4378U, 998U, 1599U, 4803U, 
    4406U, 1116U, 1729U, 3901U, 3042U, 1853U, 899U, 1502U, 
    4696U, 4309U, 1047U, 1653U, 4047U, 3855U, 3012U, 1819U, 
    861U, 1460U, 4650U, 4267U, 1005U, 1607U, 3070U, 1885U, 
    935U, 1542U, 4740U, 4349U, 1087U, 1697U, 4062U, 3878U, 
    3027U, 1836U, 880U, 1481U, 4673U, 4288U, 1026U, 1630U, 
    4030U, 3055U, 1868U, 916U, 1521U, 4717U, 4328U, 1066U, 
    1674U, 3115U, 1900U, 964U, 1561U, 4761U, 4368U, 1106U, 
    1718U, 4082U, 3128U, 1915U, 981U, 1580U, 4782U, 4387U, 
    1125U, 1739U, 4090U, 3135U, 1923U, 990U, 1590U, 4793U, 
    4397U, 1135U, 1750U, 1144U, 1760U, 5386U, 3700U, 5475U, 
    3539U, 1155U, 3297U, 5503U, 2012U, 841U, 759U, 3704U, 
    3946U, 3985U, 3958U, 3997U, 796U, 3806U, 3952U, 3991U, 
    3965U, 4004U, 3720U, 3829U, 2393U, 6487U, 4120U, 1457U, 
    3733U, 3842U, 1262U, 2414U, 4512U, 3441U, 2068U, 2776U, 
    3483U, 2979U, 3093U, 4593U, 3151U, 3461U, 4133U, 2051U, 
    1301U, 2992U, 2755U, 3478U, 2967U, 5678U, 2124U, 3086U, 
    3299U, 850U, 6135U, 5779U, 3726U, 3835U, 2972U, 2448U, 
    6494U, 4126U, 1950U, 3739U, 3848U, 1271U, 2425U, 4523U, 
    3447U, 3489U, 2985U, 3101U, 4903U, 3159U, 3466U, 4139U, 
    1331U, 2998U, 3503U, 2826U, 2128U, 3110U, 5699U, 6516U, 
    5178U, 3168U, 3521U, 5537U, 6172U, 5725U, 6398U, 5763U, 
    6199U, 5771U, 6207U, 4197U, 3144U, 3431U, 5480U, 2000U, 
    5748U, 4103U, 3979U, 4024U, 3972U, 4017U, 5648U, 5382U, 
    4186U, 3535U, 1930U, 656U, 6277U, 6353U, 6306U, 140U, 
    6231U, 635U, 6262U, 690U, 6292U, 6368U, 6324U, 5U, 
    6215U, 289U, 6246U, 763U, 3709U, 801U, 3812U, 3302U, 
    1954U, 5041U, 5304U, 2004U, 1286U, 4553U, 5104U, 4109U, 
    3662U, 3746U, 715U, 3872U, 722U, 4146U, 743U, 5077U, 
    843U, 0U, 5637U, 5647U, 6410U, 1305U, 161U, 2084U, 
    312U, 3330U, 416U, 6438U, 1336U, 225U, 2140U, 364U, 
    3363U, 468U, 6522U, 3545U, 3018U, 1825U, 3292U, 679U, 
    705U, 701U, 1416U, 3289U, 1937U, 3562U, 1990U, 3634U, 
    1995U, 3426U, 5591U, 2037U, 5643U, 835U, 2045U, 6382U, 
    4066U, 3703U, 3805U, 4511U, 4636U, 4250U, 4102U, 1174U, 
    800U, 3811U, 4887U, 4488U, 4108U, 729U, 5656U, 1228U, 
    3714U, 708U, 4497U, 4114U, 736U, 5665U, 2059U, 1940U, 
    830U, 3999U, 4483U, 1267U, 2420U, 4518U, 3448U, 2073U, 
    2781U, 5158U, 3490U, 4893U, 3467U, 2137U, 2106U, 2803U, 
    6509U, 6460U, 5164U, 3504U, 5682U, 854U, 2049U, 6396U, 
    4262U, 6550U, 838U, 4226U, 1276U, 4529U, 3454U, 2072U, 
    5157U, 3496U, 2221U, 2105U, 6459U, 5163U, 3509U, 6558U, 
    1310U, 2089U, 3335U, 1341U, 2145U, 3373U, 1981U, 6517U, 
    3757U, 3895U, 4541U, 5056U, 5312U, 4157U, 867U, 1466U, 
    4656U, 4273U, 3763U, 3909U, 4547U, 5099U, 5378U, 4163U, 
    5169U, 3522U, 6566U, 5552U, 2026U, 5135U, 5430U, 5508U, 
    3781U, 5836U, 3927U, 5849U, 2018U, 1296U, 4565U, 5130U, 
    5426U, 4180U, 5862U, 5630U, 781U, 3787U, 825U, 3933U, 
    5435U, 5722U, 4492U, 4501U, 5439U, 754U, 3697U, 791U, 
    3799U, 767U, 3752U, 805U, 3817U, 810U, 3823U, 2786U, 
    2230U, 2807U, 5686U, 1968U, 5046U, 5483U, 776U, 3775U, 
    820U, 3921U, 2458U, 2008U, 1291U, 2437U, 4559U, 5109U, 
    5391U, 5752U, 1163U, 6157U, 5813U, 2791U, 2797U, 2815U, 
    3005U, 5712U, 5547U, 6190U, 4152U, 786U, 3793U, 3564U, 
    858U, 6143U, 5791U, 1992U, 5057U, 3235U, 2952U, 6417U, 
    1316U, 180U, 2095U, 331U, 3341U, 435U, 6445U, 1359U, 
    244U, 2163U, 383U, 3391U, 487U, 6529U, 5704U, 5313U, 
    3265U, 5737U, 3636U, 868U, 6150U, 5802U, 1997U, 5079U, 
    3240U, 2955U, 6424U, 1321U, 199U, 2100U, 350U, 3346U, 
    454U, 6452U, 1376U, 263U, 2198U, 402U, 3408U, 506U, 
    6536U, 5708U, 5359U, 3269U, 5740U, 1170U, 3435U, 1431U, 
    28U, 1812U, 2077U, 3323U, 1943U, 2133U, 3356U, 6388U, 
    3418U, 1958U, 1437U, 1443U, 1449U, 6128U, 5478U, 777U, 
    3776U, 821U, 3922U, 2001U, 1287U, 4554U, 5105U, 3245U, 
    2233U, 5690U, 3542U, 834U, 1426U, 4070U, 2453U, 1977U, 
    4011U, 1281U, 2431U, 4535U, 5051U, 3229U, 3422U, 1963U, 
    3204U, 5308U, 3260U, 5729U, 771U, 3769U, 815U, 3915U, 
    4169U, 5388U, 750U, 1421U, 3173U, 3273U, 3526U, 1972U, 
    3209U, 5542U, 6181U, 5539U, 684U, 1159U, 2054U, 6403U, 
    5651U, 1207U, 5660U, 1231U, 5669U, 2063U, 2022U, 3472U, 
    2236U, 2115U, 6473U, 3515U, 5694U, 1985U, 6572U, 1011U, 
    1613U, 3530U, 5556U, 2031U, 5633U, 5756U, 4175U, 5749U, 
    152U, 6341U, 647U, 668U, 18U, 302U, 5875U, 3559U, 
    2110U, 357U, 3351U, 461U, 6466U, 2225U, 409U, 3413U, 
    513U, 6543U, 5733U, 5593U, 1167U, 6165U, 5825U, 2039U, 
    5153U, 3250U, 3009U, 6431U, 1326U, 218U, 1393U, 282U, 
    5717U, 5436U, 3277U, 5760U, 36U, 531U, 
};

static inline void InitSystemZMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(SystemZInsts, SystemZInstrNameIndices, SystemZInstrNameData, 910);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct SystemZGenInstrInfo : public TargetInstrInfo {
  explicit SystemZGenInstrInfo(int SO = -1, int DO = -1);
  virtual ~SystemZGenInstrInfo();
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc SystemZInsts[];
extern const unsigned SystemZInstrNameIndices[];
extern const char SystemZInstrNameData[];
SystemZGenInstrInfo::SystemZGenInstrInfo(int SO, int DO)
  : TargetInstrInfo(SO, DO) {
  InitMCInstrInfo(SystemZInsts, SystemZInstrNameIndices, SystemZInstrNameData, 910);
}
SystemZGenInstrInfo::~SystemZGenInstrInfo() {}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {namespace SystemZ {
namespace OpName { 
enum {
OPERAND_LAST
};
} // End namespace OpName
} // End namespace SystemZ
} // End namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM
#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {namespace SystemZ {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // End namespace SystemZ
} // End namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {namespace SystemZ {
namespace OpTypes { 
enum OperandType {
  access_reg = 0,
  bdaddr12only = 1,
  bdaddr12pair = 2,
  bdaddr20only = 3,
  bdaddr20pair = 4,
  bdladdr12onlylen8 = 5,
  bdxaddr12only = 6,
  bdxaddr12pair = 7,
  bdxaddr20only = 8,
  bdxaddr20only128 = 9,
  bdxaddr20pair = 10,
  brtarget16 = 11,
  brtarget32 = 12,
  cond4 = 13,
  disp12imm32 = 14,
  disp12imm64 = 15,
  disp20imm32 = 16,
  disp20imm64 = 17,
  dynalloc12only = 18,
  f32imm = 19,
  f64imm = 20,
  i16imm = 21,
  i1imm = 22,
  i32imm = 23,
  i64imm = 24,
  i8imm = 25,
  imm32lh16 = 26,
  imm32lh16c = 27,
  imm32ll16 = 28,
  imm32ll16c = 29,
  imm32sx16 = 30,
  imm32sx16trunc = 31,
  imm32sx8 = 32,
  imm32zx16 = 33,
  imm32zx4 = 34,
  imm32zx6 = 35,
  imm32zx8 = 36,
  imm32zx8trunc = 37,
  imm64 = 38,
  imm64hf32 = 39,
  imm64hf32c = 40,
  imm64hh16 = 41,
  imm64hh16c = 42,
  imm64hl16 = 43,
  imm64hl16c = 44,
  imm64lf32 = 45,
  imm64lf32c = 46,
  imm64lh16 = 47,
  imm64lh16c = 48,
  imm64ll16 = 49,
  imm64ll16c = 50,
  imm64sx16 = 51,
  imm64sx32 = 52,
  imm64sx8 = 53,
  imm64zx16 = 54,
  imm64zx32 = 55,
  imm64zx32n = 56,
  imm64zx8 = 57,
  laaddr12pair = 58,
  laaddr20pair = 59,
  mviaddr12pair = 60,
  mviaddr20pair = 61,
  pcrel32 = 62,
  shift12only = 63,
  shift20only = 64,
  simm32 = 65,
  uimm32 = 66,
  OPERAND_TYPE_LIST_END
};
} // End namespace OpTypes
} // End namespace SystemZ
} // End namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM
#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace SystemZ {

enum DispSize {
	DispSize_12,
	DispSize_20
};

enum NumOpsValue {
	NumOpsValue_3
};

enum OpType {
	OpType_mem
};

// getDisp12Opcode
int getDisp12Opcode(uint16_t Opcode) {
static const uint16_t getDisp12OpcodeTable[][2] = {
  { SystemZ::AHY, SystemZ::AH },
  { SystemZ::ALY, SystemZ::AL },
  { SystemZ::AY, SystemZ::A },
  { SystemZ::CHY, SystemZ::CH },
  { SystemZ::CLIY, SystemZ::CLI },
  { SystemZ::CLY, SystemZ::CL },
  { SystemZ::CSY, SystemZ::CS },
  { SystemZ::CY, SystemZ::C },
  { SystemZ::IC32Y, SystemZ::IC32 },
  { SystemZ::ICY, SystemZ::IC },
  { SystemZ::LAY, SystemZ::LA },
  { SystemZ::LDY, SystemZ::LD },
  { SystemZ::LEY, SystemZ::LE },
  { SystemZ::LHY, SystemZ::LH },
  { SystemZ::LY, SystemZ::L },
  { SystemZ::MHY, SystemZ::MH },
  { SystemZ::MSY, SystemZ::MS },
  { SystemZ::MVIY, SystemZ::MVI },
  { SystemZ::NIY, SystemZ::NI },
  { SystemZ::NY, SystemZ::N },
  { SystemZ::OIY, SystemZ::OI },
  { SystemZ::OY, SystemZ::O },
  { SystemZ::SHY, SystemZ::SH },
  { SystemZ::SLY, SystemZ::SL },
  { SystemZ::STCY, SystemZ::STC },
  { SystemZ::STDY, SystemZ::STD },
  { SystemZ::STEY, SystemZ::STE },
  { SystemZ::STHY, SystemZ::STH },
  { SystemZ::STY, SystemZ::ST },
  { SystemZ::SY, SystemZ::S },
  { SystemZ::TMY, SystemZ::TM },
  { SystemZ::XIY, SystemZ::XI },
  { SystemZ::XY, SystemZ::X },
}; // End of getDisp12OpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 33;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getDisp12OpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getDisp12OpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getDisp12OpcodeTable[mid][1];
}

// getDisp20Opcode
int getDisp20Opcode(uint16_t Opcode) {
static const uint16_t getDisp20OpcodeTable[][2] = {
  { SystemZ::A, SystemZ::AY },
  { SystemZ::AH, SystemZ::AHY },
  { SystemZ::AL, SystemZ::ALY },
  { SystemZ::C, SystemZ::CY },
  { SystemZ::CH, SystemZ::CHY },
  { SystemZ::CL, SystemZ::CLY },
  { SystemZ::CLI, SystemZ::CLIY },
  { SystemZ::CS, SystemZ::CSY },
  { SystemZ::IC, SystemZ::ICY },
  { SystemZ::IC32, SystemZ::IC32Y },
  { SystemZ::L, SystemZ::LY },
  { SystemZ::LA, SystemZ::LAY },
  { SystemZ::LD, SystemZ::LDY },
  { SystemZ::LE, SystemZ::LEY },
  { SystemZ::LH, SystemZ::LHY },
  { SystemZ::MH, SystemZ::MHY },
  { SystemZ::MS, SystemZ::MSY },
  { SystemZ::MVI, SystemZ::MVIY },
  { SystemZ::N, SystemZ::NY },
  { SystemZ::NI, SystemZ::NIY },
  { SystemZ::O, SystemZ::OY },
  { SystemZ::OI, SystemZ::OIY },
  { SystemZ::S, SystemZ::SY },
  { SystemZ::SH, SystemZ::SHY },
  { SystemZ::SL, SystemZ::SLY },
  { SystemZ::ST, SystemZ::STY },
  { SystemZ::STC, SystemZ::STCY },
  { SystemZ::STD, SystemZ::STDY },
  { SystemZ::STE, SystemZ::STEY },
  { SystemZ::STH, SystemZ::STHY },
  { SystemZ::TM, SystemZ::TMY },
  { SystemZ::X, SystemZ::XY },
  { SystemZ::XI, SystemZ::XIY },
}; // End of getDisp20OpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 33;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getDisp20OpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getDisp20OpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getDisp20OpcodeTable[mid][1];
}

// getMemOpcode
int getMemOpcode(uint16_t Opcode) {
static const uint16_t getMemOpcodeTable[][2] = {
  { SystemZ::ADBR, SystemZ::ADB },
  { SystemZ::AEBR, SystemZ::AEB },
  { SystemZ::AGFR, SystemZ::AGF },
  { SystemZ::AGR, SystemZ::AG },
  { SystemZ::ALCGR, SystemZ::ALCG },
  { SystemZ::ALCR, SystemZ::ALC },
  { SystemZ::ALGFR, SystemZ::ALGF },
  { SystemZ::ALGR, SystemZ::ALG },
  { SystemZ::ALR, SystemZ::AL },
  { SystemZ::AR, SystemZ::A },
  { SystemZ::CDBR, SystemZ::CDB },
  { SystemZ::CEBR, SystemZ::CEB },
  { SystemZ::CGFR, SystemZ::CGF },
  { SystemZ::CGR, SystemZ::CG },
  { SystemZ::CLGFR, SystemZ::CLGF },
  { SystemZ::CLGR, SystemZ::CLG },
  { SystemZ::CLR, SystemZ::CL },
  { SystemZ::CR, SystemZ::C },
  { SystemZ::DDBR, SystemZ::DDB },
  { SystemZ::DEBR, SystemZ::DEB },
  { SystemZ::DLGR, SystemZ::DLG },
  { SystemZ::DLR, SystemZ::DL },
  { SystemZ::DSGFR, SystemZ::DSGF },
  { SystemZ::DSGR, SystemZ::DSG },
  { SystemZ::LBR, SystemZ::LB },
  { SystemZ::LDEBR, SystemZ::LDEB },
  { SystemZ::LDR, SystemZ::LD },
  { SystemZ::LER, SystemZ::LE },
  { SystemZ::LGBR, SystemZ::LGB },
  { SystemZ::LGFR, SystemZ::LGF },
  { SystemZ::LGHR, SystemZ::LGH },
  { SystemZ::LGR, SystemZ::LG },
  { SystemZ::LHR, SystemZ::LH },
  { SystemZ::LLCR, SystemZ::LLC },
  { SystemZ::LLCRMux, SystemZ::LLCMux },
  { SystemZ::LLGCR, SystemZ::LLGC },
  { SystemZ::LLGFR, SystemZ::LLGF },
  { SystemZ::LLGHR, SystemZ::LLGH },
  { SystemZ::LLHR, SystemZ::LLH },
  { SystemZ::LLHRMux, SystemZ::LLHMux },
  { SystemZ::LR, SystemZ::L },
  { SystemZ::LRMux, SystemZ::LMux },
  { SystemZ::LRVGR, SystemZ::LRVG },
  { SystemZ::LRVR, SystemZ::LRV },
  { SystemZ::LTGFR, SystemZ::LTGF },
  { SystemZ::LTGR, SystemZ::LTG },
  { SystemZ::LTR, SystemZ::LT },
  { SystemZ::LXDBR, SystemZ::LXDB },
  { SystemZ::LXEBR, SystemZ::LXEB },
  { SystemZ::MADBR, SystemZ::MADB },
  { SystemZ::MAEBR, SystemZ::MAEB },
  { SystemZ::MDBR, SystemZ::MDB },
  { SystemZ::MDEBR, SystemZ::MDEB },
  { SystemZ::MEEBR, SystemZ::MEEB },
  { SystemZ::MLGR, SystemZ::MLG },
  { SystemZ::MSDBR, SystemZ::MSDB },
  { SystemZ::MSEBR, SystemZ::MSEB },
  { SystemZ::MSGFR, SystemZ::MSGF },
  { SystemZ::MSGR, SystemZ::MSG },
  { SystemZ::MSR, SystemZ::MS },
  { SystemZ::MXDBR, SystemZ::MXDB },
  { SystemZ::NGR, SystemZ::NG },
  { SystemZ::NR, SystemZ::N },
  { SystemZ::OGR, SystemZ::OG },
  { SystemZ::OR, SystemZ::O },
  { SystemZ::SDBR, SystemZ::SDB },
  { SystemZ::SEBR, SystemZ::SEB },
  { SystemZ::SGFR, SystemZ::SGF },
  { SystemZ::SGR, SystemZ::SG },
  { SystemZ::SLBR, SystemZ::SLB },
  { SystemZ::SLGBR, SystemZ::SLBG },
  { SystemZ::SLGFR, SystemZ::SLGF },
  { SystemZ::SLGR, SystemZ::SLG },
  { SystemZ::SLR, SystemZ::SL },
  { SystemZ::SQDBR, SystemZ::SQDB },
  { SystemZ::SQEBR, SystemZ::SQEB },
  { SystemZ::SR, SystemZ::S },
  { SystemZ::XGR, SystemZ::XG },
  { SystemZ::XR, SystemZ::X },
}; // End of getMemOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 79;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getMemOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getMemOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getMemOpcodeTable[mid][1];
}

// getThreeOperandOpcode
int getThreeOperandOpcode(uint16_t Opcode) {
static const uint16_t getThreeOperandOpcodeTable[][2] = {
  { SystemZ::AGHI, SystemZ::AGHIK },
  { SystemZ::AGR, SystemZ::AGRK },
  { SystemZ::AHI, SystemZ::AHIK },
  { SystemZ::AHIMux, SystemZ::AHIMuxK },
  { SystemZ::ALGR, SystemZ::ALGRK },
  { SystemZ::ALR, SystemZ::ALRK },
  { SystemZ::AR, SystemZ::ARK },
  { SystemZ::NGR, SystemZ::NGRK },
  { SystemZ::NR, SystemZ::NRK },
  { SystemZ::OGR, SystemZ::OGRK },
  { SystemZ::OR, SystemZ::ORK },
  { SystemZ::SGR, SystemZ::SGRK },
  { SystemZ::SLGR, SystemZ::SLGRK },
  { SystemZ::SLL, SystemZ::SLLK },
  { SystemZ::SLR, SystemZ::SLRK },
  { SystemZ::SR, SystemZ::SRK },
  { SystemZ::SRA, SystemZ::SRAK },
  { SystemZ::SRL, SystemZ::SRLK },
  { SystemZ::XGR, SystemZ::XGRK },
  { SystemZ::XR, SystemZ::XRK },
}; // End of getThreeOperandOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 20;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getThreeOperandOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getThreeOperandOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getThreeOperandOpcodeTable[mid][1];
}

} // End SystemZ namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

